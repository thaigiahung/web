#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="webgame")]
public partial class WebGameDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Inserttask(task instance);
  partial void Updatetask(task instance);
  partial void Deletetask(task instance);
  partial void Insertcashshop(cashshop instance);
  partial void Updatecashshop(cashshop instance);
  partial void Deletecashshop(cashshop instance);
  partial void Insertcategory(category instance);
  partial void Updatecategory(category instance);
  partial void Deletecategory(category instance);
  partial void Insertchar_level(char_level instance);
  partial void Updatechar_level(char_level instance);
  partial void Deletechar_level(char_level instance);
  partial void Insertchar_task(char_task instance);
  partial void Updatechar_task(char_task instance);
  partial void Deletechar_task(char_task instance);
  partial void Insertchar_title(char_title instance);
  partial void Updatechar_title(char_title instance);
  partial void Deletechar_title(char_title instance);
  partial void Insertclan(clan instance);
  partial void Updateclan(clan instance);
  partial void Deleteclan(clan instance);
  partial void Insertdrop(drop instance);
  partial void Updatedrop(drop instance);
  partial void Deletedrop(drop instance);
  partial void Insertglobal_task(global_task instance);
  partial void Updateglobal_task(global_task instance);
  partial void Deleteglobal_task(global_task instance);
  partial void Insertinventory(inventory instance);
  partial void Updateinventory(inventory instance);
  partial void Deleteinventory(inventory instance);
  partial void Insertitem_option(item_option instance);
  partial void Updateitem_option(item_option instance);
  partial void Deleteitem_option(item_option instance);
  partial void Insertitemevent(itemevent instance);
  partial void Updateitemevent(itemevent instance);
  partial void Deleteitemevent(itemevent instance);
  partial void Insertitemevent_option(itemevent_option instance);
  partial void Updateitemevent_option(itemevent_option instance);
  partial void Deleteitemevent_option(itemevent_option instance);
  partial void Insertmap(map instance);
  partial void Updatemap(map instance);
  partial void Deletemap(map instance);
  partial void Insertmarket(market instance);
  partial void Updatemarket(market instance);
  partial void Deletemarket(market instance);
  partial void Insertoriginal_item(original_item instance);
  partial void Updateoriginal_item(original_item instance);
  partial void Deleteoriginal_item(original_item instance);
  partial void Insertquest(quest instance);
  partial void Updatequest(quest instance);
  partial void Deletequest(quest instance);
  partial void Insertquestkey(questkey instance);
  partial void Updatequestkey(questkey instance);
  partial void Deletequestkey(questkey instance);
  partial void Insertrank_pvp(rank_pvp instance);
  partial void Updaterank_pvp(rank_pvp instance);
  partial void Deleterank_pvp(rank_pvp instance);
  partial void Insertshop(shop instance);
  partial void Updateshop(shop instance);
  partial void Deleteshop(shop instance);
  partial void InsertHero(Hero instance);
  partial void UpdateHero(Hero instance);
  partial void DeleteHero(Hero instance);
  partial void InsertHeroType(HeroType instance);
  partial void UpdateHeroType(HeroType instance);
  partial void DeleteHeroType(HeroType instance);
  partial void InsertHeroCart(HeroCart instance);
  partial void UpdateHeroCart(HeroCart instance);
  partial void DeleteHeroCart(HeroCart instance);
  partial void Insertcharacter(character instance);
  partial void Updatecharacter(character instance);
  partial void Deletecharacter(character instance);
  partial void InsertHero1(Hero1 instance);
  partial void UpdateHero1(Hero1 instance);
  partial void DeleteHero1(Hero1 instance);
  partial void InsertHeroType1(HeroType1 instance);
  partial void UpdateHeroType1(HeroType1 instance);
  partial void DeleteHeroType1(HeroType1 instance);
  partial void InsertHeroCart1(HeroCart1 instance);
  partial void UpdateHeroCart1(HeroCart1 instance);
  partial void DeleteHeroCart1(HeroCart1 instance);
  partial void Inserttintuc(tintuc instance);
  partial void Updatetintuc(tintuc instance);
  partial void Deletetintuc(tintuc instance);
  partial void Insertitem(item instance);
  partial void Updateitem(item instance);
  partial void Deleteitem(item instance);
  partial void Insertmonster(monster instance);
  partial void Updatemonster(monster instance);
  partial void Deletemonster(monster instance);
  partial void Insertaccount(account instance);
  partial void Updateaccount(account instance);
  partial void Deleteaccount(account instance);
  #endregion
	
	public WebGameDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["webgameConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public WebGameDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WebGameDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WebGameDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WebGameDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<task> tasks
	{
		get
		{
			return this.GetTable<task>();
		}
	}
	
	public System.Data.Linq.Table<cashshop> cashshops
	{
		get
		{
			return this.GetTable<cashshop>();
		}
	}
	
	public System.Data.Linq.Table<category> categories
	{
		get
		{
			return this.GetTable<category>();
		}
	}
	
	public System.Data.Linq.Table<char_level> char_levels
	{
		get
		{
			return this.GetTable<char_level>();
		}
	}
	
	public System.Data.Linq.Table<char_task> char_tasks
	{
		get
		{
			return this.GetTable<char_task>();
		}
	}
	
	public System.Data.Linq.Table<char_title> char_titles
	{
		get
		{
			return this.GetTable<char_title>();
		}
	}
	
	public System.Data.Linq.Table<clan> clans
	{
		get
		{
			return this.GetTable<clan>();
		}
	}
	
	public System.Data.Linq.Table<drop> drops
	{
		get
		{
			return this.GetTable<drop>();
		}
	}
	
	public System.Data.Linq.Table<global_task> global_tasks
	{
		get
		{
			return this.GetTable<global_task>();
		}
	}
	
	public System.Data.Linq.Table<inventory> inventories
	{
		get
		{
			return this.GetTable<inventory>();
		}
	}
	
	public System.Data.Linq.Table<item_option> item_options
	{
		get
		{
			return this.GetTable<item_option>();
		}
	}
	
	public System.Data.Linq.Table<itemevent> itemevents
	{
		get
		{
			return this.GetTable<itemevent>();
		}
	}
	
	public System.Data.Linq.Table<itemevent_option> itemevent_options
	{
		get
		{
			return this.GetTable<itemevent_option>();
		}
	}
	
	public System.Data.Linq.Table<map> maps
	{
		get
		{
			return this.GetTable<map>();
		}
	}
	
	public System.Data.Linq.Table<market> markets
	{
		get
		{
			return this.GetTable<market>();
		}
	}
	
	public System.Data.Linq.Table<original_item> original_items
	{
		get
		{
			return this.GetTable<original_item>();
		}
	}
	
	public System.Data.Linq.Table<quest> quests
	{
		get
		{
			return this.GetTable<quest>();
		}
	}
	
	public System.Data.Linq.Table<questkey> questkeys
	{
		get
		{
			return this.GetTable<questkey>();
		}
	}
	
	public System.Data.Linq.Table<rank_pvp> rank_pvps
	{
		get
		{
			return this.GetTable<rank_pvp>();
		}
	}
	
	public System.Data.Linq.Table<shop> shops
	{
		get
		{
			return this.GetTable<shop>();
		}
	}
	
	public System.Data.Linq.Table<Hero> Heros
	{
		get
		{
			return this.GetTable<Hero>();
		}
	}
	
	public System.Data.Linq.Table<HeroType> HeroTypes
	{
		get
		{
			return this.GetTable<HeroType>();
		}
	}
	
	public System.Data.Linq.Table<HeroCart> HeroCarts
	{
		get
		{
			return this.GetTable<HeroCart>();
		}
	}
	
	public System.Data.Linq.Table<character> characters
	{
		get
		{
			return this.GetTable<character>();
		}
	}
	
	public System.Data.Linq.Table<Hero1> Hero1s
	{
		get
		{
			return this.GetTable<Hero1>();
		}
	}
	
	public System.Data.Linq.Table<HeroType1> HeroType1s
	{
		get
		{
			return this.GetTable<HeroType1>();
		}
	}
	
	public System.Data.Linq.Table<HeroCart1> HeroCart1s
	{
		get
		{
			return this.GetTable<HeroCart1>();
		}
	}
	
	public System.Data.Linq.Table<tintuc> tintucs
	{
		get
		{
			return this.GetTable<tintuc>();
		}
	}
	
	public System.Data.Linq.Table<item> items
	{
		get
		{
			return this.GetTable<item>();
		}
	}
	
	public System.Data.Linq.Table<monster> monsters
	{
		get
		{
			return this.GetTable<monster>();
		}
	}
	
	public System.Data.Linq.Table<account> accounts
	{
		get
		{
			return this.GetTable<account>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.task")]
public partial class task : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _comment;
	
	private System.Nullable<int> _value_require;
	
	private EntitySet<char_task> _char_tasks;
	
	private EntitySet<quest> _quests;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void Onvalue_requireChanging(System.Nullable<int> value);
    partial void Onvalue_requireChanged();
    #endregion
	
	public task()
	{
		this._char_tasks = new EntitySet<char_task>(new Action<char_task>(this.attach_char_tasks), new Action<char_task>(this.detach_char_tasks));
		this._quests = new EntitySet<quest>(new Action<quest>(this.attach_quests), new Action<quest>(this.detach_quests));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string comment
	{
		get
		{
			return this._comment;
		}
		set
		{
			if ((this._comment != value))
			{
				this.OncommentChanging(value);
				this.SendPropertyChanging();
				this._comment = value;
				this.SendPropertyChanged("comment");
				this.OncommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value_require", DbType="Int")]
	public System.Nullable<int> value_require
	{
		get
		{
			return this._value_require;
		}
		set
		{
			if ((this._value_require != value))
			{
				this.Onvalue_requireChanging(value);
				this.SendPropertyChanging();
				this._value_require = value;
				this.SendPropertyChanged("value_require");
				this.Onvalue_requireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="task_char_task", Storage="_char_tasks", ThisKey="ID", OtherKey="task_id")]
	public EntitySet<char_task> char_tasks
	{
		get
		{
			return this._char_tasks;
		}
		set
		{
			this._char_tasks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="task_quest", Storage="_quests", ThisKey="ID", OtherKey="quest_task_id")]
	public EntitySet<quest> quests
	{
		get
		{
			return this._quests;
		}
		set
		{
			this._quests.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_char_tasks(char_task entity)
	{
		this.SendPropertyChanging();
		entity.task = this;
	}
	
	private void detach_char_tasks(char_task entity)
	{
		this.SendPropertyChanging();
		entity.task = null;
	}
	
	private void attach_quests(quest entity)
	{
		this.SendPropertyChanging();
		entity.task = this;
	}
	
	private void detach_quests(quest entity)
	{
		this.SendPropertyChanging();
		entity.task = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cashshop")]
public partial class cashshop : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _cashshop_type;
	
	private System.Nullable<int> _cashshop_item;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncashshop_typeChanging(System.Nullable<int> value);
    partial void Oncashshop_typeChanged();
    partial void Oncashshop_itemChanging(System.Nullable<int> value);
    partial void Oncashshop_itemChanged();
    #endregion
	
	public cashshop()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashshop_type", DbType="Int")]
	public System.Nullable<int> cashshop_type
	{
		get
		{
			return this._cashshop_type;
		}
		set
		{
			if ((this._cashshop_type != value))
			{
				this.Oncashshop_typeChanging(value);
				this.SendPropertyChanging();
				this._cashshop_type = value;
				this.SendPropertyChanged("cashshop_type");
				this.Oncashshop_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cashshop_item", DbType="Int")]
	public System.Nullable<int> cashshop_item
	{
		get
		{
			return this._cashshop_item;
		}
		set
		{
			if ((this._cashshop_item != value))
			{
				this.Oncashshop_itemChanging(value);
				this.SendPropertyChanging();
				this._cashshop_item = value;
				this.SendPropertyChanged("cashshop_item");
				this.Oncashshop_itemChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _cat_name;
	
	private EntitySet<tintuc> _tintucs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncat_nameChanging(string value);
    partial void Oncat_nameChanged();
    #endregion
	
	public category()
	{
		this._tintucs = new EntitySet<tintuc>(new Action<tintuc>(this.attach_tintucs), new Action<tintuc>(this.detach_tintucs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_name", DbType="NVarChar(100)")]
	public string cat_name
	{
		get
		{
			return this._cat_name;
		}
		set
		{
			if ((this._cat_name != value))
			{
				this.Oncat_nameChanging(value);
				this.SendPropertyChanging();
				this._cat_name = value;
				this.SendPropertyChanged("cat_name");
				this.Oncat_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_tintuc", Storage="_tintucs", ThisKey="ID", OtherKey="news_category")]
	public EntitySet<tintuc> tintucs
	{
		get
		{
			return this._tintucs;
		}
		set
		{
			this._tintucs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tintucs(tintuc entity)
	{
		this.SendPropertyChanging();
		entity.category = this;
	}
	
	private void detach_tintucs(tintuc entity)
	{
		this.SendPropertyChanging();
		entity.category = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.char_level")]
public partial class char_level : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _char_level1;
	
	private System.Nullable<int> _char_require_exp;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onchar_level1Changing(int value);
    partial void Onchar_level1Changed();
    partial void Onchar_require_expChanging(System.Nullable<int> value);
    partial void Onchar_require_expChanged();
    #endregion
	
	public char_level()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="char_level", Storage="_char_level1", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int char_level1
	{
		get
		{
			return this._char_level1;
		}
		set
		{
			if ((this._char_level1 != value))
			{
				this.Onchar_level1Changing(value);
				this.SendPropertyChanging();
				this._char_level1 = value;
				this.SendPropertyChanged("char_level1");
				this.Onchar_level1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_require_exp", DbType="Int")]
	public System.Nullable<int> char_require_exp
	{
		get
		{
			return this._char_require_exp;
		}
		set
		{
			if ((this._char_require_exp != value))
			{
				this.Onchar_require_expChanging(value);
				this.SendPropertyChanging();
				this._char_require_exp = value;
				this.SendPropertyChanged("char_require_exp");
				this.Onchar_require_expChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.char_task")]
public partial class char_task : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _username;
	
	private System.Nullable<int> _task_id;
	
	private System.Nullable<int> _task_value;
	
	private EntityRef<task> _task;
	
	private EntityRef<account> _account;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Ontask_idChanging(System.Nullable<int> value);
    partial void Ontask_idChanged();
    partial void Ontask_valueChanging(System.Nullable<int> value);
    partial void Ontask_valueChanged();
    #endregion
	
	public char_task()
	{
		this._task = default(EntityRef<task>);
		this._account = default(EntityRef<account>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				if (this._account.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_task_id", DbType="Int")]
	public System.Nullable<int> task_id
	{
		get
		{
			return this._task_id;
		}
		set
		{
			if ((this._task_id != value))
			{
				if (this._task.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Ontask_idChanging(value);
				this.SendPropertyChanging();
				this._task_id = value;
				this.SendPropertyChanged("task_id");
				this.Ontask_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_task_value", DbType="Int")]
	public System.Nullable<int> task_value
	{
		get
		{
			return this._task_value;
		}
		set
		{
			if ((this._task_value != value))
			{
				this.Ontask_valueChanging(value);
				this.SendPropertyChanging();
				this._task_value = value;
				this.SendPropertyChanged("task_value");
				this.Ontask_valueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="task_char_task", Storage="_task", ThisKey="task_id", OtherKey="ID", IsForeignKey=true)]
	public task task
	{
		get
		{
			return this._task.Entity;
		}
		set
		{
			task previousValue = this._task.Entity;
			if (((previousValue != value) 
						|| (this._task.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._task.Entity = null;
					previousValue.char_tasks.Remove(this);
				}
				this._task.Entity = value;
				if ((value != null))
				{
					value.char_tasks.Add(this);
					this._task_id = value.ID;
				}
				else
				{
					this._task_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("task");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_char_task", Storage="_account", ThisKey="username", OtherKey="username", IsForeignKey=true)]
	public account account
	{
		get
		{
			return this._account.Entity;
		}
		set
		{
			account previousValue = this._account.Entity;
			if (((previousValue != value) 
						|| (this._account.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._account.Entity = null;
					previousValue.char_tasks.Remove(this);
				}
				this._account.Entity = value;
				if ((value != null))
				{
					value.char_tasks.Add(this);
					this._username = value.username;
				}
				else
				{
					this._username = default(string);
				}
				this.SendPropertyChanged("account");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.char_title")]
public partial class char_title : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _title_name;
	
	private System.Nullable<int> _title_exp;
	
	private System.Nullable<int> _title_money;
	
	private EntitySet<character> _characters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Ontitle_nameChanging(string value);
    partial void Ontitle_nameChanged();
    partial void Ontitle_expChanging(System.Nullable<int> value);
    partial void Ontitle_expChanged();
    partial void Ontitle_moneyChanging(System.Nullable<int> value);
    partial void Ontitle_moneyChanged();
    #endregion
	
	public char_title()
	{
		this._characters = new EntitySet<character>(new Action<character>(this.attach_characters), new Action<character>(this.detach_characters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_name", DbType="NVarChar(50)")]
	public string title_name
	{
		get
		{
			return this._title_name;
		}
		set
		{
			if ((this._title_name != value))
			{
				this.Ontitle_nameChanging(value);
				this.SendPropertyChanging();
				this._title_name = value;
				this.SendPropertyChanged("title_name");
				this.Ontitle_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_exp", DbType="Int")]
	public System.Nullable<int> title_exp
	{
		get
		{
			return this._title_exp;
		}
		set
		{
			if ((this._title_exp != value))
			{
				this.Ontitle_expChanging(value);
				this.SendPropertyChanging();
				this._title_exp = value;
				this.SendPropertyChanged("title_exp");
				this.Ontitle_expChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_money", DbType="Int")]
	public System.Nullable<int> title_money
	{
		get
		{
			return this._title_money;
		}
		set
		{
			if ((this._title_money != value))
			{
				this.Ontitle_moneyChanging(value);
				this.SendPropertyChanging();
				this._title_money = value;
				this.SendPropertyChanged("title_money");
				this.Ontitle_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="char_title_character", Storage="_characters", ThisKey="ID", OtherKey="char_title")]
	public EntitySet<character> characters
	{
		get
		{
			return this._characters;
		}
		set
		{
			this._characters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.char_title1 = this;
	}
	
	private void detach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.char_title1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.clan")]
public partial class clan : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _clan_name;
	
	private string _clan_master;
	
	private System.Nullable<int> _clan_level;
	
	private System.Nullable<int> _clan_money;
	
	private System.Nullable<int> _clan_exp;
	
	private EntitySet<character> _characters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onclan_nameChanging(string value);
    partial void Onclan_nameChanged();
    partial void Onclan_masterChanging(string value);
    partial void Onclan_masterChanged();
    partial void Onclan_levelChanging(System.Nullable<int> value);
    partial void Onclan_levelChanged();
    partial void Onclan_moneyChanging(System.Nullable<int> value);
    partial void Onclan_moneyChanged();
    partial void Onclan_expChanging(System.Nullable<int> value);
    partial void Onclan_expChanged();
    #endregion
	
	public clan()
	{
		this._characters = new EntitySet<character>(new Action<character>(this.attach_characters), new Action<character>(this.detach_characters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clan_name", DbType="NVarChar(50)")]
	public string clan_name
	{
		get
		{
			return this._clan_name;
		}
		set
		{
			if ((this._clan_name != value))
			{
				this.Onclan_nameChanging(value);
				this.SendPropertyChanging();
				this._clan_name = value;
				this.SendPropertyChanged("clan_name");
				this.Onclan_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clan_master", DbType="NVarChar(50)")]
	public string clan_master
	{
		get
		{
			return this._clan_master;
		}
		set
		{
			if ((this._clan_master != value))
			{
				this.Onclan_masterChanging(value);
				this.SendPropertyChanging();
				this._clan_master = value;
				this.SendPropertyChanged("clan_master");
				this.Onclan_masterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clan_level", DbType="Int")]
	public System.Nullable<int> clan_level
	{
		get
		{
			return this._clan_level;
		}
		set
		{
			if ((this._clan_level != value))
			{
				this.Onclan_levelChanging(value);
				this.SendPropertyChanging();
				this._clan_level = value;
				this.SendPropertyChanged("clan_level");
				this.Onclan_levelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clan_money", DbType="Int")]
	public System.Nullable<int> clan_money
	{
		get
		{
			return this._clan_money;
		}
		set
		{
			if ((this._clan_money != value))
			{
				this.Onclan_moneyChanging(value);
				this.SendPropertyChanging();
				this._clan_money = value;
				this.SendPropertyChanged("clan_money");
				this.Onclan_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clan_exp", DbType="Int")]
	public System.Nullable<int> clan_exp
	{
		get
		{
			return this._clan_exp;
		}
		set
		{
			if ((this._clan_exp != value))
			{
				this.Onclan_expChanging(value);
				this.SendPropertyChanging();
				this._clan_exp = value;
				this.SendPropertyChanged("clan_exp");
				this.Onclan_expChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="clan_character", Storage="_characters", ThisKey="ID", OtherKey="char_clan_id")]
	public EntitySet<character> characters
	{
		get
		{
			return this._characters;
		}
		set
		{
			this._characters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.clan = this;
	}
	
	private void detach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.clan = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[drop]")]
public partial class drop : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _drop_item_type;
	
	private System.Nullable<int> _drop_item_id;
	
	private System.Nullable<int> _drop_rate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Ondrop_item_typeChanging(System.Nullable<int> value);
    partial void Ondrop_item_typeChanged();
    partial void Ondrop_item_idChanging(System.Nullable<int> value);
    partial void Ondrop_item_idChanged();
    partial void Ondrop_rateChanging(System.Nullable<int> value);
    partial void Ondrop_rateChanged();
    #endregion
	
	public drop()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drop_item_type", DbType="Int")]
	public System.Nullable<int> drop_item_type
	{
		get
		{
			return this._drop_item_type;
		}
		set
		{
			if ((this._drop_item_type != value))
			{
				this.Ondrop_item_typeChanging(value);
				this.SendPropertyChanging();
				this._drop_item_type = value;
				this.SendPropertyChanged("drop_item_type");
				this.Ondrop_item_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drop_item_id", DbType="Int")]
	public System.Nullable<int> drop_item_id
	{
		get
		{
			return this._drop_item_id;
		}
		set
		{
			if ((this._drop_item_id != value))
			{
				this.Ondrop_item_idChanging(value);
				this.SendPropertyChanging();
				this._drop_item_id = value;
				this.SendPropertyChanged("drop_item_id");
				this.Ondrop_item_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drop_rate", DbType="Int")]
	public System.Nullable<int> drop_rate
	{
		get
		{
			return this._drop_rate;
		}
		set
		{
			if ((this._drop_rate != value))
			{
				this.Ondrop_rateChanging(value);
				this.SendPropertyChanging();
				this._drop_rate = value;
				this.SendPropertyChanged("drop_rate");
				this.Ondrop_rateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.global_task")]
public partial class global_task : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _comment;
	
	private System.Nullable<int> _value;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnvalueChanging(System.Nullable<int> value);
    partial void OnvalueChanged();
    #endregion
	
	public global_task()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string comment
	{
		get
		{
			return this._comment;
		}
		set
		{
			if ((this._comment != value))
			{
				this.OncommentChanging(value);
				this.SendPropertyChanging();
				this._comment = value;
				this.SendPropertyChanged("comment");
				this.OncommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int")]
	public System.Nullable<int> value
	{
		get
		{
			return this._value;
		}
		set
		{
			if ((this._value != value))
			{
				this.OnvalueChanging(value);
				this.SendPropertyChanging();
				this._value = value;
				this.SendPropertyChanged("value");
				this.OnvalueChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory")]
public partial class inventory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _username;
	
	private System.Nullable<int> _inv_quantum;
	
	private string _inv_item;
	
	private System.Nullable<int> _inv_money;
	
	private EntityRef<account> _account;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Oninv_quantumChanging(System.Nullable<int> value);
    partial void Oninv_quantumChanged();
    partial void Oninv_itemChanging(string value);
    partial void Oninv_itemChanged();
    partial void Oninv_moneyChanging(System.Nullable<int> value);
    partial void Oninv_moneyChanged();
    #endregion
	
	public inventory()
	{
		this._account = default(EntityRef<account>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				if (this._account.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inv_quantum", DbType="Int")]
	public System.Nullable<int> inv_quantum
	{
		get
		{
			return this._inv_quantum;
		}
		set
		{
			if ((this._inv_quantum != value))
			{
				this.Oninv_quantumChanging(value);
				this.SendPropertyChanging();
				this._inv_quantum = value;
				this.SendPropertyChanged("inv_quantum");
				this.Oninv_quantumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inv_item", DbType="NVarChar(200)")]
	public string inv_item
	{
		get
		{
			return this._inv_item;
		}
		set
		{
			if ((this._inv_item != value))
			{
				this.Oninv_itemChanging(value);
				this.SendPropertyChanging();
				this._inv_item = value;
				this.SendPropertyChanged("inv_item");
				this.Oninv_itemChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inv_money", DbType="Int")]
	public System.Nullable<int> inv_money
	{
		get
		{
			return this._inv_money;
		}
		set
		{
			if ((this._inv_money != value))
			{
				this.Oninv_moneyChanging(value);
				this.SendPropertyChanging();
				this._inv_money = value;
				this.SendPropertyChanged("inv_money");
				this.Oninv_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_inventory", Storage="_account", ThisKey="username", OtherKey="username", IsForeignKey=true)]
	public account account
	{
		get
		{
			return this._account.Entity;
		}
		set
		{
			account previousValue = this._account.Entity;
			if (((previousValue != value) 
						|| (this._account.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._account.Entity = null;
					previousValue.inventories.Remove(this);
				}
				this._account.Entity = value;
				if ((value != null))
				{
					value.inventories.Add(this);
					this._username = value.username;
				}
				else
				{
					this._username = default(string);
				}
				this.SendPropertyChanged("account");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item_option")]
public partial class item_option : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _opt_name;
	
	private EntitySet<item> _items;
	
	private EntitySet<item> _items1;
	
	private EntitySet<item> _items2;
	
	private EntitySet<item> _items3;
	
	private EntitySet<item> _items4;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onopt_nameChanging(string value);
    partial void Onopt_nameChanged();
    #endregion
	
	public item_option()
	{
		this._items = new EntitySet<item>(new Action<item>(this.attach_items), new Action<item>(this.detach_items));
		this._items1 = new EntitySet<item>(new Action<item>(this.attach_items1), new Action<item>(this.detach_items1));
		this._items2 = new EntitySet<item>(new Action<item>(this.attach_items2), new Action<item>(this.detach_items2));
		this._items3 = new EntitySet<item>(new Action<item>(this.attach_items3), new Action<item>(this.detach_items3));
		this._items4 = new EntitySet<item>(new Action<item>(this.attach_items4), new Action<item>(this.detach_items4));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opt_name", DbType="NVarChar(50)")]
	public string opt_name
	{
		get
		{
			return this._opt_name;
		}
		set
		{
			if ((this._opt_name != value))
			{
				this.Onopt_nameChanging(value);
				this.SendPropertyChanging();
				this._opt_name = value;
				this.SendPropertyChanged("opt_name");
				this.Onopt_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item", Storage="_items", ThisKey="ID", OtherKey="item_param1")]
	public EntitySet<item> items
	{
		get
		{
			return this._items;
		}
		set
		{
			this._items.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item1", Storage="_items1", ThisKey="ID", OtherKey="item_param2")]
	public EntitySet<item> items1
	{
		get
		{
			return this._items1;
		}
		set
		{
			this._items1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item2", Storage="_items2", ThisKey="ID", OtherKey="item_param3")]
	public EntitySet<item> items2
	{
		get
		{
			return this._items2;
		}
		set
		{
			this._items2.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item3", Storage="_items3", ThisKey="ID", OtherKey="item_param4")]
	public EntitySet<item> items3
	{
		get
		{
			return this._items3;
		}
		set
		{
			this._items3.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item4", Storage="_items4", ThisKey="ID", OtherKey="item_param5")]
	public EntitySet<item> items4
	{
		get
		{
			return this._items4;
		}
		set
		{
			this._items4.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_items(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option = this;
	}
	
	private void detach_items(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option = null;
	}
	
	private void attach_items1(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option1 = this;
	}
	
	private void detach_items1(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option1 = null;
	}
	
	private void attach_items2(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option2 = this;
	}
	
	private void detach_items2(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option2 = null;
	}
	
	private void attach_items3(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option3 = this;
	}
	
	private void detach_items3(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option3 = null;
	}
	
	private void attach_items4(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option4 = this;
	}
	
	private void detach_items4(item entity)
	{
		this.SendPropertyChanging();
		entity.item_option4 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itemevent")]
public partial class itemevent : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _itemevent_name;
	
	private System.Nullable<int> _itemevent_param;
	
	private System.Nullable<int> _itemevent_value;
	
	private string _itemevent_icon;
	
	private EntityRef<itemevent_option> _itemevent_option;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onitemevent_nameChanging(string value);
    partial void Onitemevent_nameChanged();
    partial void Onitemevent_paramChanging(System.Nullable<int> value);
    partial void Onitemevent_paramChanged();
    partial void Onitemevent_valueChanging(System.Nullable<int> value);
    partial void Onitemevent_valueChanged();
    partial void Onitemevent_iconChanging(string value);
    partial void Onitemevent_iconChanged();
    #endregion
	
	public itemevent()
	{
		this._itemevent_option = default(EntityRef<itemevent_option>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemevent_name", DbType="NVarChar(50)")]
	public string itemevent_name
	{
		get
		{
			return this._itemevent_name;
		}
		set
		{
			if ((this._itemevent_name != value))
			{
				this.Onitemevent_nameChanging(value);
				this.SendPropertyChanging();
				this._itemevent_name = value;
				this.SendPropertyChanged("itemevent_name");
				this.Onitemevent_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemevent_param", DbType="Int")]
	public System.Nullable<int> itemevent_param
	{
		get
		{
			return this._itemevent_param;
		}
		set
		{
			if ((this._itemevent_param != value))
			{
				if (this._itemevent_option.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onitemevent_paramChanging(value);
				this.SendPropertyChanging();
				this._itemevent_param = value;
				this.SendPropertyChanged("itemevent_param");
				this.Onitemevent_paramChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemevent_value", DbType="Int")]
	public System.Nullable<int> itemevent_value
	{
		get
		{
			return this._itemevent_value;
		}
		set
		{
			if ((this._itemevent_value != value))
			{
				this.Onitemevent_valueChanging(value);
				this.SendPropertyChanging();
				this._itemevent_value = value;
				this.SendPropertyChanged("itemevent_value");
				this.Onitemevent_valueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemevent_icon", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string itemevent_icon
	{
		get
		{
			return this._itemevent_icon;
		}
		set
		{
			if ((this._itemevent_icon != value))
			{
				this.Onitemevent_iconChanging(value);
				this.SendPropertyChanging();
				this._itemevent_icon = value;
				this.SendPropertyChanged("itemevent_icon");
				this.Onitemevent_iconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemevent_option_itemevent", Storage="_itemevent_option", ThisKey="itemevent_param", OtherKey="ID", IsForeignKey=true)]
	public itemevent_option itemevent_option
	{
		get
		{
			return this._itemevent_option.Entity;
		}
		set
		{
			itemevent_option previousValue = this._itemevent_option.Entity;
			if (((previousValue != value) 
						|| (this._itemevent_option.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._itemevent_option.Entity = null;
					previousValue.itemevents.Remove(this);
				}
				this._itemevent_option.Entity = value;
				if ((value != null))
				{
					value.itemevents.Add(this);
					this._itemevent_param = value.ID;
				}
				else
				{
					this._itemevent_param = default(Nullable<int>);
				}
				this.SendPropertyChanged("itemevent_option");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itemevent_option")]
public partial class itemevent_option : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _eventopt_name;
	
	private string _eventopt_description;
	
	private EntitySet<itemevent> _itemevents;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oneventopt_nameChanging(string value);
    partial void Oneventopt_nameChanged();
    partial void Oneventopt_descriptionChanging(string value);
    partial void Oneventopt_descriptionChanged();
    #endregion
	
	public itemevent_option()
	{
		this._itemevents = new EntitySet<itemevent>(new Action<itemevent>(this.attach_itemevents), new Action<itemevent>(this.detach_itemevents));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventopt_name", DbType="NVarChar(50)")]
	public string eventopt_name
	{
		get
		{
			return this._eventopt_name;
		}
		set
		{
			if ((this._eventopt_name != value))
			{
				this.Oneventopt_nameChanging(value);
				this.SendPropertyChanging();
				this._eventopt_name = value;
				this.SendPropertyChanged("eventopt_name");
				this.Oneventopt_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventopt_description", DbType="NVarChar(50)")]
	public string eventopt_description
	{
		get
		{
			return this._eventopt_description;
		}
		set
		{
			if ((this._eventopt_description != value))
			{
				this.Oneventopt_descriptionChanging(value);
				this.SendPropertyChanging();
				this._eventopt_description = value;
				this.SendPropertyChanged("eventopt_description");
				this.Oneventopt_descriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="itemevent_option_itemevent", Storage="_itemevents", ThisKey="ID", OtherKey="itemevent_param")]
	public EntitySet<itemevent> itemevents
	{
		get
		{
			return this._itemevents;
		}
		set
		{
			this._itemevents.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_itemevents(itemevent entity)
	{
		this.SendPropertyChanging();
		entity.itemevent_option = this;
	}
	
	private void detach_itemevents(itemevent entity)
	{
		this.SendPropertyChanging();
		entity.itemevent_option = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map")]
public partial class map : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _map_name;
	
	private System.Nullable<int> _map_level;
	
	private EntitySet<character> _characters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onmap_nameChanging(string value);
    partial void Onmap_nameChanged();
    partial void Onmap_levelChanging(System.Nullable<int> value);
    partial void Onmap_levelChanged();
    #endregion
	
	public map()
	{
		this._characters = new EntitySet<character>(new Action<character>(this.attach_characters), new Action<character>(this.detach_characters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_map_name", DbType="NVarChar(50)")]
	public string map_name
	{
		get
		{
			return this._map_name;
		}
		set
		{
			if ((this._map_name != value))
			{
				this.Onmap_nameChanging(value);
				this.SendPropertyChanging();
				this._map_name = value;
				this.SendPropertyChanged("map_name");
				this.Onmap_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_map_level", DbType="Int")]
	public System.Nullable<int> map_level
	{
		get
		{
			return this._map_level;
		}
		set
		{
			if ((this._map_level != value))
			{
				this.Onmap_levelChanging(value);
				this.SendPropertyChanging();
				this._map_level = value;
				this.SendPropertyChanged("map_level");
				this.Onmap_levelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="map_character", Storage="_characters", ThisKey="ID", OtherKey="char_position")]
	public EntitySet<character> characters
	{
		get
		{
			return this._characters;
		}
		set
		{
			this._characters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.map = this;
	}
	
	private void detach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.map = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.market")]
public partial class market : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _market_item_id;
	
	private System.Nullable<System.DateTime> _market_date;
	
	private System.Nullable<int> _market_item_price;
	
	private System.Nullable<System.DateTime> _market_expire;
	
	private EntityRef<item> _item;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onmarket_item_idChanging(int value);
    partial void Onmarket_item_idChanged();
    partial void Onmarket_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmarket_dateChanged();
    partial void Onmarket_item_priceChanging(System.Nullable<int> value);
    partial void Onmarket_item_priceChanged();
    partial void Onmarket_expireChanging(System.Nullable<System.DateTime> value);
    partial void Onmarket_expireChanged();
    #endregion
	
	public market()
	{
		this._item = default(EntityRef<item>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_market_item_id", DbType="Int NOT NULL")]
	public int market_item_id
	{
		get
		{
			return this._market_item_id;
		}
		set
		{
			if ((this._market_item_id != value))
			{
				if (this._item.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onmarket_item_idChanging(value);
				this.SendPropertyChanging();
				this._market_item_id = value;
				this.SendPropertyChanged("market_item_id");
				this.Onmarket_item_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_market_date", DbType="DateTime")]
	public System.Nullable<System.DateTime> market_date
	{
		get
		{
			return this._market_date;
		}
		set
		{
			if ((this._market_date != value))
			{
				this.Onmarket_dateChanging(value);
				this.SendPropertyChanging();
				this._market_date = value;
				this.SendPropertyChanged("market_date");
				this.Onmarket_dateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_market_item_price", DbType="Int")]
	public System.Nullable<int> market_item_price
	{
		get
		{
			return this._market_item_price;
		}
		set
		{
			if ((this._market_item_price != value))
			{
				this.Onmarket_item_priceChanging(value);
				this.SendPropertyChanging();
				this._market_item_price = value;
				this.SendPropertyChanged("market_item_price");
				this.Onmarket_item_priceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_market_expire", DbType="DateTime")]
	public System.Nullable<System.DateTime> market_expire
	{
		get
		{
			return this._market_expire;
		}
		set
		{
			if ((this._market_expire != value))
			{
				this.Onmarket_expireChanging(value);
				this.SendPropertyChanging();
				this._market_expire = value;
				this.SendPropertyChanged("market_expire");
				this.Onmarket_expireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_market", Storage="_item", ThisKey="market_item_id", OtherKey="ID", IsForeignKey=true)]
	public item item
	{
		get
		{
			return this._item.Entity;
		}
		set
		{
			item previousValue = this._item.Entity;
			if (((previousValue != value) 
						|| (this._item.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item.Entity = null;
					previousValue.markets.Remove(this);
				}
				this._item.Entity = value;
				if ((value != null))
				{
					value.markets.Add(this);
					this._market_item_id = value.ID;
				}
				else
				{
					this._market_item_id = default(int);
				}
				this.SendPropertyChanged("item");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.original_item")]
public partial class original_item : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _item_name;
	
	private System.Nullable<int> _item_level;
	
	private string _item_icon;
	
	private string _item_description;
	
	private System.Nullable<int> _item_type;
	
	private System.Nullable<int> _item_param1;
	
	private System.Nullable<int> _item_value1;
	
	private System.Nullable<int> _item_param2;
	
	private System.Nullable<int> _item_value2;
	
	private System.Nullable<int> _item_param3;
	
	private System.Nullable<int> _item_value3;
	
	private System.Nullable<int> _item_param4;
	
	private System.Nullable<int> _item_value4;
	
	private System.Nullable<int> _item_param5;
	
	private System.Nullable<int> _item_value5;
	
	private EntitySet<shop> _shops;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onitem_nameChanging(string value);
    partial void Onitem_nameChanged();
    partial void Onitem_levelChanging(System.Nullable<int> value);
    partial void Onitem_levelChanged();
    partial void Onitem_iconChanging(string value);
    partial void Onitem_iconChanged();
    partial void Onitem_descriptionChanging(string value);
    partial void Onitem_descriptionChanged();
    partial void Onitem_typeChanging(System.Nullable<int> value);
    partial void Onitem_typeChanged();
    partial void Onitem_param1Changing(System.Nullable<int> value);
    partial void Onitem_param1Changed();
    partial void Onitem_value1Changing(System.Nullable<int> value);
    partial void Onitem_value1Changed();
    partial void Onitem_param2Changing(System.Nullable<int> value);
    partial void Onitem_param2Changed();
    partial void Onitem_value2Changing(System.Nullable<int> value);
    partial void Onitem_value2Changed();
    partial void Onitem_param3Changing(System.Nullable<int> value);
    partial void Onitem_param3Changed();
    partial void Onitem_value3Changing(System.Nullable<int> value);
    partial void Onitem_value3Changed();
    partial void Onitem_param4Changing(System.Nullable<int> value);
    partial void Onitem_param4Changed();
    partial void Onitem_value4Changing(System.Nullable<int> value);
    partial void Onitem_value4Changed();
    partial void Onitem_param5Changing(System.Nullable<int> value);
    partial void Onitem_param5Changed();
    partial void Onitem_value5Changing(System.Nullable<int> value);
    partial void Onitem_value5Changed();
    #endregion
	
	public original_item()
	{
		this._shops = new EntitySet<shop>(new Action<shop>(this.attach_shops), new Action<shop>(this.detach_shops));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_name", DbType="NVarChar(50)")]
	public string item_name
	{
		get
		{
			return this._item_name;
		}
		set
		{
			if ((this._item_name != value))
			{
				this.Onitem_nameChanging(value);
				this.SendPropertyChanging();
				this._item_name = value;
				this.SendPropertyChanged("item_name");
				this.Onitem_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_level", DbType="Int")]
	public System.Nullable<int> item_level
	{
		get
		{
			return this._item_level;
		}
		set
		{
			if ((this._item_level != value))
			{
				this.Onitem_levelChanging(value);
				this.SendPropertyChanging();
				this._item_level = value;
				this.SendPropertyChanged("item_level");
				this.Onitem_levelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_icon", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string item_icon
	{
		get
		{
			return this._item_icon;
		}
		set
		{
			if ((this._item_icon != value))
			{
				this.Onitem_iconChanging(value);
				this.SendPropertyChanging();
				this._item_icon = value;
				this.SendPropertyChanged("item_icon");
				this.Onitem_iconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string item_description
	{
		get
		{
			return this._item_description;
		}
		set
		{
			if ((this._item_description != value))
			{
				this.Onitem_descriptionChanging(value);
				this.SendPropertyChanging();
				this._item_description = value;
				this.SendPropertyChanged("item_description");
				this.Onitem_descriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_type", DbType="Int")]
	public System.Nullable<int> item_type
	{
		get
		{
			return this._item_type;
		}
		set
		{
			if ((this._item_type != value))
			{
				this.Onitem_typeChanging(value);
				this.SendPropertyChanging();
				this._item_type = value;
				this.SendPropertyChanged("item_type");
				this.Onitem_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param1", DbType="Int")]
	public System.Nullable<int> item_param1
	{
		get
		{
			return this._item_param1;
		}
		set
		{
			if ((this._item_param1 != value))
			{
				this.Onitem_param1Changing(value);
				this.SendPropertyChanging();
				this._item_param1 = value;
				this.SendPropertyChanged("item_param1");
				this.Onitem_param1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value1", DbType="Int")]
	public System.Nullable<int> item_value1
	{
		get
		{
			return this._item_value1;
		}
		set
		{
			if ((this._item_value1 != value))
			{
				this.Onitem_value1Changing(value);
				this.SendPropertyChanging();
				this._item_value1 = value;
				this.SendPropertyChanged("item_value1");
				this.Onitem_value1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param2", DbType="Int")]
	public System.Nullable<int> item_param2
	{
		get
		{
			return this._item_param2;
		}
		set
		{
			if ((this._item_param2 != value))
			{
				this.Onitem_param2Changing(value);
				this.SendPropertyChanging();
				this._item_param2 = value;
				this.SendPropertyChanged("item_param2");
				this.Onitem_param2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value2", DbType="Int")]
	public System.Nullable<int> item_value2
	{
		get
		{
			return this._item_value2;
		}
		set
		{
			if ((this._item_value2 != value))
			{
				this.Onitem_value2Changing(value);
				this.SendPropertyChanging();
				this._item_value2 = value;
				this.SendPropertyChanged("item_value2");
				this.Onitem_value2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param3", DbType="Int")]
	public System.Nullable<int> item_param3
	{
		get
		{
			return this._item_param3;
		}
		set
		{
			if ((this._item_param3 != value))
			{
				this.Onitem_param3Changing(value);
				this.SendPropertyChanging();
				this._item_param3 = value;
				this.SendPropertyChanged("item_param3");
				this.Onitem_param3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value3", DbType="Int")]
	public System.Nullable<int> item_value3
	{
		get
		{
			return this._item_value3;
		}
		set
		{
			if ((this._item_value3 != value))
			{
				this.Onitem_value3Changing(value);
				this.SendPropertyChanging();
				this._item_value3 = value;
				this.SendPropertyChanged("item_value3");
				this.Onitem_value3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param4", DbType="Int")]
	public System.Nullable<int> item_param4
	{
		get
		{
			return this._item_param4;
		}
		set
		{
			if ((this._item_param4 != value))
			{
				this.Onitem_param4Changing(value);
				this.SendPropertyChanging();
				this._item_param4 = value;
				this.SendPropertyChanged("item_param4");
				this.Onitem_param4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value4", DbType="Int")]
	public System.Nullable<int> item_value4
	{
		get
		{
			return this._item_value4;
		}
		set
		{
			if ((this._item_value4 != value))
			{
				this.Onitem_value4Changing(value);
				this.SendPropertyChanging();
				this._item_value4 = value;
				this.SendPropertyChanged("item_value4");
				this.Onitem_value4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param5", DbType="Int")]
	public System.Nullable<int> item_param5
	{
		get
		{
			return this._item_param5;
		}
		set
		{
			if ((this._item_param5 != value))
			{
				this.Onitem_param5Changing(value);
				this.SendPropertyChanging();
				this._item_param5 = value;
				this.SendPropertyChanged("item_param5");
				this.Onitem_param5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value5", DbType="Int")]
	public System.Nullable<int> item_value5
	{
		get
		{
			return this._item_value5;
		}
		set
		{
			if ((this._item_value5 != value))
			{
				this.Onitem_value5Changing(value);
				this.SendPropertyChanging();
				this._item_value5 = value;
				this.SendPropertyChanged("item_value5");
				this.Onitem_value5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="original_item_shop", Storage="_shops", ThisKey="ID", OtherKey="shop_item_id")]
	public EntitySet<shop> shops
	{
		get
		{
			return this._shops;
		}
		set
		{
			this._shops.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_shops(shop entity)
	{
		this.SendPropertyChanging();
		entity.original_item = this;
	}
	
	private void detach_shops(shop entity)
	{
		this.SendPropertyChanging();
		entity.original_item = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.quest")]
public partial class quest : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _quest_name;
	
	private string _quest_content;
	
	private string _quest_gift;
	
	private System.Nullable<int> _quest_money;
	
	private System.Nullable<long> _quest_exp;
	
	private System.Nullable<int> _quest_task_id;
	
	private System.Nullable<int> _quest_task_value;
	
	private string _quest_questkey_list;
	
	private EntityRef<task> _task;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onquest_nameChanging(string value);
    partial void Onquest_nameChanged();
    partial void Onquest_contentChanging(string value);
    partial void Onquest_contentChanged();
    partial void Onquest_giftChanging(string value);
    partial void Onquest_giftChanged();
    partial void Onquest_moneyChanging(System.Nullable<int> value);
    partial void Onquest_moneyChanged();
    partial void Onquest_expChanging(System.Nullable<long> value);
    partial void Onquest_expChanged();
    partial void Onquest_task_idChanging(System.Nullable<int> value);
    partial void Onquest_task_idChanged();
    partial void Onquest_task_valueChanging(System.Nullable<int> value);
    partial void Onquest_task_valueChanged();
    partial void Onquest_questkey_listChanging(string value);
    partial void Onquest_questkey_listChanged();
    #endregion
	
	public quest()
	{
		this._task = default(EntityRef<task>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_name", DbType="NVarChar(50)")]
	public string quest_name
	{
		get
		{
			return this._quest_name;
		}
		set
		{
			if ((this._quest_name != value))
			{
				this.Onquest_nameChanging(value);
				this.SendPropertyChanging();
				this._quest_name = value;
				this.SendPropertyChanged("quest_name");
				this.Onquest_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string quest_content
	{
		get
		{
			return this._quest_content;
		}
		set
		{
			if ((this._quest_content != value))
			{
				this.Onquest_contentChanging(value);
				this.SendPropertyChanging();
				this._quest_content = value;
				this.SendPropertyChanged("quest_content");
				this.Onquest_contentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_gift", DbType="NVarChar(50)")]
	public string quest_gift
	{
		get
		{
			return this._quest_gift;
		}
		set
		{
			if ((this._quest_gift != value))
			{
				this.Onquest_giftChanging(value);
				this.SendPropertyChanging();
				this._quest_gift = value;
				this.SendPropertyChanged("quest_gift");
				this.Onquest_giftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_money", DbType="Int")]
	public System.Nullable<int> quest_money
	{
		get
		{
			return this._quest_money;
		}
		set
		{
			if ((this._quest_money != value))
			{
				this.Onquest_moneyChanging(value);
				this.SendPropertyChanging();
				this._quest_money = value;
				this.SendPropertyChanged("quest_money");
				this.Onquest_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_exp", DbType="BigInt")]
	public System.Nullable<long> quest_exp
	{
		get
		{
			return this._quest_exp;
		}
		set
		{
			if ((this._quest_exp != value))
			{
				this.Onquest_expChanging(value);
				this.SendPropertyChanging();
				this._quest_exp = value;
				this.SendPropertyChanged("quest_exp");
				this.Onquest_expChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_task_id", DbType="Int")]
	public System.Nullable<int> quest_task_id
	{
		get
		{
			return this._quest_task_id;
		}
		set
		{
			if ((this._quest_task_id != value))
			{
				if (this._task.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onquest_task_idChanging(value);
				this.SendPropertyChanging();
				this._quest_task_id = value;
				this.SendPropertyChanged("quest_task_id");
				this.Onquest_task_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_task_value", DbType="Int")]
	public System.Nullable<int> quest_task_value
	{
		get
		{
			return this._quest_task_value;
		}
		set
		{
			if ((this._quest_task_value != value))
			{
				this.Onquest_task_valueChanging(value);
				this.SendPropertyChanging();
				this._quest_task_value = value;
				this.SendPropertyChanged("quest_task_value");
				this.Onquest_task_valueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quest_questkey_list", DbType="NVarChar(50)")]
	public string quest_questkey_list
	{
		get
		{
			return this._quest_questkey_list;
		}
		set
		{
			if ((this._quest_questkey_list != value))
			{
				this.Onquest_questkey_listChanging(value);
				this.SendPropertyChanging();
				this._quest_questkey_list = value;
				this.SendPropertyChanged("quest_questkey_list");
				this.Onquest_questkey_listChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="task_quest", Storage="_task", ThisKey="quest_task_id", OtherKey="ID", IsForeignKey=true)]
	public task task
	{
		get
		{
			return this._task.Entity;
		}
		set
		{
			task previousValue = this._task.Entity;
			if (((previousValue != value) 
						|| (this._task.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._task.Entity = null;
					previousValue.quests.Remove(this);
				}
				this._task.Entity = value;
				if ((value != null))
				{
					value.quests.Add(this);
					this._quest_task_id = value.ID;
				}
				else
				{
					this._quest_task_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("task");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.questkey")]
public partial class questkey : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _questkey_name;
	
	private string _questkey_icon;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onquestkey_nameChanging(string value);
    partial void Onquestkey_nameChanged();
    partial void Onquestkey_iconChanging(string value);
    partial void Onquestkey_iconChanged();
    #endregion
	
	public questkey()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questkey_name", DbType="NVarChar(50)")]
	public string questkey_name
	{
		get
		{
			return this._questkey_name;
		}
		set
		{
			if ((this._questkey_name != value))
			{
				this.Onquestkey_nameChanging(value);
				this.SendPropertyChanging();
				this._questkey_name = value;
				this.SendPropertyChanged("questkey_name");
				this.Onquestkey_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questkey_icon", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string questkey_icon
	{
		get
		{
			return this._questkey_icon;
		}
		set
		{
			if ((this._questkey_icon != value))
			{
				this.Onquestkey_iconChanging(value);
				this.SendPropertyChanging();
				this._questkey_icon = value;
				this.SendPropertyChanged("questkey_icon");
				this.Onquestkey_iconChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rank_pvp")]
public partial class rank_pvp : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _rank;
	
	private string _char_name;
	
	private string _rank_gift;
	
	private System.Nullable<int> _rank_money;
	
	private System.Nullable<long> _rank_exp;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrankChanging(int value);
    partial void OnrankChanged();
    partial void Onchar_nameChanging(string value);
    partial void Onchar_nameChanged();
    partial void Onrank_giftChanging(string value);
    partial void Onrank_giftChanged();
    partial void Onrank_moneyChanging(System.Nullable<int> value);
    partial void Onrank_moneyChanged();
    partial void Onrank_expChanging(System.Nullable<long> value);
    partial void Onrank_expChanged();
    #endregion
	
	public rank_pvp()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rank", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int rank
	{
		get
		{
			return this._rank;
		}
		set
		{
			if ((this._rank != value))
			{
				this.OnrankChanging(value);
				this.SendPropertyChanging();
				this._rank = value;
				this.SendPropertyChanged("rank");
				this.OnrankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_name", DbType="NVarChar(50)")]
	public string char_name
	{
		get
		{
			return this._char_name;
		}
		set
		{
			if ((this._char_name != value))
			{
				this.Onchar_nameChanging(value);
				this.SendPropertyChanging();
				this._char_name = value;
				this.SendPropertyChanged("char_name");
				this.Onchar_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rank_gift", DbType="NVarChar(50)")]
	public string rank_gift
	{
		get
		{
			return this._rank_gift;
		}
		set
		{
			if ((this._rank_gift != value))
			{
				this.Onrank_giftChanging(value);
				this.SendPropertyChanging();
				this._rank_gift = value;
				this.SendPropertyChanged("rank_gift");
				this.Onrank_giftChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rank_money", DbType="Int")]
	public System.Nullable<int> rank_money
	{
		get
		{
			return this._rank_money;
		}
		set
		{
			if ((this._rank_money != value))
			{
				this.Onrank_moneyChanging(value);
				this.SendPropertyChanging();
				this._rank_money = value;
				this.SendPropertyChanged("rank_money");
				this.Onrank_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rank_exp", DbType="BigInt")]
	public System.Nullable<long> rank_exp
	{
		get
		{
			return this._rank_exp;
		}
		set
		{
			if ((this._rank_exp != value))
			{
				this.Onrank_expChanging(value);
				this.SendPropertyChanging();
				this._rank_exp = value;
				this.SendPropertyChanged("rank_exp");
				this.Onrank_expChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shop")]
public partial class shop : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _shop_item_id;
	
	private System.Nullable<int> _shop_item_price;
	
	private EntityRef<original_item> _original_item;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onshop_item_idChanging(System.Nullable<int> value);
    partial void Onshop_item_idChanged();
    partial void Onshop_item_priceChanging(System.Nullable<int> value);
    partial void Onshop_item_priceChanged();
    #endregion
	
	public shop()
	{
		this._original_item = default(EntityRef<original_item>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop_item_id", DbType="Int")]
	public System.Nullable<int> shop_item_id
	{
		get
		{
			return this._shop_item_id;
		}
		set
		{
			if ((this._shop_item_id != value))
			{
				if (this._original_item.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onshop_item_idChanging(value);
				this.SendPropertyChanging();
				this._shop_item_id = value;
				this.SendPropertyChanged("shop_item_id");
				this.Onshop_item_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shop_item_price", DbType="Int")]
	public System.Nullable<int> shop_item_price
	{
		get
		{
			return this._shop_item_price;
		}
		set
		{
			if ((this._shop_item_price != value))
			{
				this.Onshop_item_priceChanging(value);
				this.SendPropertyChanging();
				this._shop_item_price = value;
				this.SendPropertyChanged("shop_item_price");
				this.Onshop_item_priceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="original_item_shop", Storage="_original_item", ThisKey="shop_item_id", OtherKey="ID", IsForeignKey=true)]
	public original_item original_item
	{
		get
		{
			return this._original_item.Entity;
		}
		set
		{
			original_item previousValue = this._original_item.Entity;
			if (((previousValue != value) 
						|| (this._original_item.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._original_item.Entity = null;
					previousValue.shops.Remove(this);
				}
				this._original_item.Entity = value;
				if ((value != null))
				{
					value.shops.Add(this);
					this._shop_item_id = value.ID;
				}
				else
				{
					this._shop_item_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("original_item");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hero")]
public partial class Hero : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdHero;
	
	private string _Name;
	
	private System.Nullable<int> _IdType;
	
	private string _Lore;
	
	private string _Avatar;
	
	private string _Skin;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHeroChanging(int value);
    partial void OnIdHeroChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdTypeChanging(System.Nullable<int> value);
    partial void OnIdTypeChanged();
    partial void OnLoreChanging(string value);
    partial void OnLoreChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnSkinChanging(string value);
    partial void OnSkinChanged();
    #endregion
	
	public Hero()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHero", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdHero
	{
		get
		{
			return this._IdHero;
		}
		set
		{
			if ((this._IdHero != value))
			{
				this.OnIdHeroChanging(value);
				this.SendPropertyChanging();
				this._IdHero = value;
				this.SendPropertyChanged("IdHero");
				this.OnIdHeroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdType", DbType="Int")]
	public System.Nullable<int> IdType
	{
		get
		{
			return this._IdType;
		}
		set
		{
			if ((this._IdType != value))
			{
				this.OnIdTypeChanging(value);
				this.SendPropertyChanging();
				this._IdType = value;
				this.SendPropertyChanged("IdType");
				this.OnIdTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lore", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Lore
	{
		get
		{
			return this._Lore;
		}
		set
		{
			if ((this._Lore != value))
			{
				this.OnLoreChanging(value);
				this.SendPropertyChanging();
				this._Lore = value;
				this.SendPropertyChanged("Lore");
				this.OnLoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Avatar
	{
		get
		{
			return this._Avatar;
		}
		set
		{
			if ((this._Avatar != value))
			{
				this.OnAvatarChanging(value);
				this.SendPropertyChanging();
				this._Avatar = value;
				this.SendPropertyChanged("Avatar");
				this.OnAvatarChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skin", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Skin
	{
		get
		{
			return this._Skin;
		}
		set
		{
			if ((this._Skin != value))
			{
				this.OnSkinChanging(value);
				this.SendPropertyChanging();
				this._Skin = value;
				this.SendPropertyChanged("Skin");
				this.OnSkinChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeroType")]
public partial class HeroType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdType;
	
	private string _TypeName;
	
	private System.Nullable<int> _HP;
	
	private System.Nullable<int> _Damage;
	
	private System.Nullable<int> _Defence;
	
	private System.Nullable<int> _Energy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeChanging(int value);
    partial void OnIdTypeChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnHPChanging(System.Nullable<int> value);
    partial void OnHPChanged();
    partial void OnDamageChanging(System.Nullable<int> value);
    partial void OnDamageChanged();
    partial void OnDefenceChanging(System.Nullable<int> value);
    partial void OnDefenceChanged();
    partial void OnEnergyChanging(System.Nullable<int> value);
    partial void OnEnergyChanged();
    #endregion
	
	public HeroType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdType", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdType
	{
		get
		{
			return this._IdType;
		}
		set
		{
			if ((this._IdType != value))
			{
				this.OnIdTypeChanging(value);
				this.SendPropertyChanging();
				this._IdType = value;
				this.SendPropertyChanged("IdType");
				this.OnIdTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string TypeName
	{
		get
		{
			return this._TypeName;
		}
		set
		{
			if ((this._TypeName != value))
			{
				this.OnTypeNameChanging(value);
				this.SendPropertyChanging();
				this._TypeName = value;
				this.SendPropertyChanged("TypeName");
				this.OnTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HP", DbType="Int")]
	public System.Nullable<int> HP
	{
		get
		{
			return this._HP;
		}
		set
		{
			if ((this._HP != value))
			{
				this.OnHPChanging(value);
				this.SendPropertyChanging();
				this._HP = value;
				this.SendPropertyChanged("HP");
				this.OnHPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damage", DbType="Int")]
	public System.Nullable<int> Damage
	{
		get
		{
			return this._Damage;
		}
		set
		{
			if ((this._Damage != value))
			{
				this.OnDamageChanging(value);
				this.SendPropertyChanging();
				this._Damage = value;
				this.SendPropertyChanged("Damage");
				this.OnDamageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defence", DbType="Int")]
	public System.Nullable<int> Defence
	{
		get
		{
			return this._Defence;
		}
		set
		{
			if ((this._Defence != value))
			{
				this.OnDefenceChanging(value);
				this.SendPropertyChanging();
				this._Defence = value;
				this.SendPropertyChanged("Defence");
				this.OnDefenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Energy", DbType="Int")]
	public System.Nullable<int> Energy
	{
		get
		{
			return this._Energy;
		}
		set
		{
			if ((this._Energy != value))
			{
				this.OnEnergyChanging(value);
				this.SendPropertyChanging();
				this._Energy = value;
				this.SendPropertyChanged("Energy");
				this.OnEnergyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeroCart")]
public partial class HeroCart : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdCart;
	
	private string _UserName;
	
	private System.Nullable<int> _SelectedIndex;
	
	private System.Nullable<int> _IdSelectedHero;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCartChanging(int value);
    partial void OnIdCartChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSelectedIndexChanging(System.Nullable<int> value);
    partial void OnSelectedIndexChanged();
    partial void OnIdSelectedHeroChanging(System.Nullable<int> value);
    partial void OnIdSelectedHeroChanged();
    #endregion
	
	public HeroCart()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCart", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdCart
	{
		get
		{
			return this._IdCart;
		}
		set
		{
			if ((this._IdCart != value))
			{
				this.OnIdCartChanging(value);
				this.SendPropertyChanging();
				this._IdCart = value;
				this.SendPropertyChanged("IdCart");
				this.OnIdCartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedIndex", DbType="Int")]
	public System.Nullable<int> SelectedIndex
	{
		get
		{
			return this._SelectedIndex;
		}
		set
		{
			if ((this._SelectedIndex != value))
			{
				this.OnSelectedIndexChanging(value);
				this.SendPropertyChanging();
				this._SelectedIndex = value;
				this.SendPropertyChanged("SelectedIndex");
				this.OnSelectedIndexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSelectedHero", DbType="Int")]
	public System.Nullable<int> IdSelectedHero
	{
		get
		{
			return this._IdSelectedHero;
		}
		set
		{
			if ((this._IdSelectedHero != value))
			{
				this.OnIdSelectedHeroChanging(value);
				this.SendPropertyChanging();
				this._IdSelectedHero = value;
				this.SendPropertyChanged("IdSelectedHero");
				this.OnIdSelectedHeroChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.character")]
public partial class character : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _username;
	
	private string _char_name;
	
	private System.Nullable<int> _char_level;
	
	private System.Nullable<long> _char_exp;
	
	private System.Nullable<int> _char_energy;
	
	private System.Nullable<int> _char_damage;
	
	private System.Nullable<int> _char_defend;
	
	private System.Nullable<int> _char_critical;
	
	private System.Nullable<int> _char_hp;
	
	private System.Nullable<int> _char_clan_id;
	
	private System.Nullable<int> _char_money;
	
	private string _char_friend_list;
	
	private System.Nullable<int> _char_position;
	
	private System.Nullable<int> _char_item_equipment_helm;
	
	private System.Nullable<int> _char_item_equipment_armor;
	
	private System.Nullable<int> _char_item_equipment_gloves;
	
	private System.Nullable<int> _char_item_equipment_weapon;
	
	private System.Nullable<int> _char_item_equipment_shield;
	
	private System.Nullable<int> _char_item_equipment_boots;
	
	private string _char_baggage_event;
	
	private string _char_baggage_quest;
	
	private string _char_baggage;
	
	private System.Nullable<int> _char_cash;
	
	private System.Nullable<int> _char_title;
	
	private string _char_avatar;
	
	private System.Nullable<int> _char_kill;
	
	private string _char_skin;
	
	private EntityRef<char_title> _char_title1;
	
	private EntityRef<clan> _clan;
	
	private EntityRef<map> _map;
	
	private EntityRef<item> _item;
	
	private EntityRef<item> _item1;
	
	private EntityRef<item> _item2;
	
	private EntityRef<item> _item3;
	
	private EntityRef<item> _item4;
	
	private EntityRef<item> _item5;
	
	private EntityRef<item> _item6;
	
	private EntityRef<account> _account;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onchar_nameChanging(string value);
    partial void Onchar_nameChanged();
    partial void Onchar_levelChanging(System.Nullable<int> value);
    partial void Onchar_levelChanged();
    partial void Onchar_expChanging(System.Nullable<long> value);
    partial void Onchar_expChanged();
    partial void Onchar_energyChanging(System.Nullable<int> value);
    partial void Onchar_energyChanged();
    partial void Onchar_damageChanging(System.Nullable<int> value);
    partial void Onchar_damageChanged();
    partial void Onchar_defendChanging(System.Nullable<int> value);
    partial void Onchar_defendChanged();
    partial void Onchar_criticalChanging(System.Nullable<int> value);
    partial void Onchar_criticalChanged();
    partial void Onchar_hpChanging(System.Nullable<int> value);
    partial void Onchar_hpChanged();
    partial void Onchar_clan_idChanging(System.Nullable<int> value);
    partial void Onchar_clan_idChanged();
    partial void Onchar_moneyChanging(System.Nullable<int> value);
    partial void Onchar_moneyChanged();
    partial void Onchar_friend_listChanging(string value);
    partial void Onchar_friend_listChanged();
    partial void Onchar_positionChanging(System.Nullable<int> value);
    partial void Onchar_positionChanged();
    partial void Onchar_item_equipment_helmChanging(System.Nullable<int> value);
    partial void Onchar_item_equipment_helmChanged();
    partial void Onchar_item_equipment_armorChanging(System.Nullable<int> value);
    partial void Onchar_item_equipment_armorChanged();
    partial void Onchar_item_equipment_glovesChanging(System.Nullable<int> value);
    partial void Onchar_item_equipment_glovesChanged();
    partial void Onchar_item_equipment_weaponChanging(System.Nullable<int> value);
    partial void Onchar_item_equipment_weaponChanged();
    partial void Onchar_item_equipment_shieldChanging(System.Nullable<int> value);
    partial void Onchar_item_equipment_shieldChanged();
    partial void Onchar_item_equipment_bootsChanging(System.Nullable<int> value);
    partial void Onchar_item_equipment_bootsChanged();
    partial void Onchar_baggage_eventChanging(string value);
    partial void Onchar_baggage_eventChanged();
    partial void Onchar_baggage_questChanging(string value);
    partial void Onchar_baggage_questChanged();
    partial void Onchar_baggageChanging(string value);
    partial void Onchar_baggageChanged();
    partial void Onchar_cashChanging(System.Nullable<int> value);
    partial void Onchar_cashChanged();
    partial void Onchar_titleChanging(System.Nullable<int> value);
    partial void Onchar_titleChanged();
    partial void Onchar_avatarChanging(string value);
    partial void Onchar_avatarChanged();
    partial void Onchar_killChanging(System.Nullable<int> value);
    partial void Onchar_killChanged();
    partial void Onchar_skinChanging(string value);
    partial void Onchar_skinChanged();
    #endregion
	
	public character()
	{
		this._char_title1 = default(EntityRef<char_title>);
		this._clan = default(EntityRef<clan>);
		this._map = default(EntityRef<map>);
		this._item = default(EntityRef<item>);
		this._item1 = default(EntityRef<item>);
		this._item2 = default(EntityRef<item>);
		this._item3 = default(EntityRef<item>);
		this._item4 = default(EntityRef<item>);
		this._item5 = default(EntityRef<item>);
		this._item6 = default(EntityRef<item>);
		this._account = default(EntityRef<account>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				if (this._account.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_name", DbType="NVarChar(50)")]
	public string char_name
	{
		get
		{
			return this._char_name;
		}
		set
		{
			if ((this._char_name != value))
			{
				this.Onchar_nameChanging(value);
				this.SendPropertyChanging();
				this._char_name = value;
				this.SendPropertyChanged("char_name");
				this.Onchar_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_level", DbType="Int")]
	public System.Nullable<int> char_level
	{
		get
		{
			return this._char_level;
		}
		set
		{
			if ((this._char_level != value))
			{
				this.Onchar_levelChanging(value);
				this.SendPropertyChanging();
				this._char_level = value;
				this.SendPropertyChanged("char_level");
				this.Onchar_levelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_exp", DbType="BigInt")]
	public System.Nullable<long> char_exp
	{
		get
		{
			return this._char_exp;
		}
		set
		{
			if ((this._char_exp != value))
			{
				this.Onchar_expChanging(value);
				this.SendPropertyChanging();
				this._char_exp = value;
				this.SendPropertyChanged("char_exp");
				this.Onchar_expChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_energy", DbType="Int")]
	public System.Nullable<int> char_energy
	{
		get
		{
			return this._char_energy;
		}
		set
		{
			if ((this._char_energy != value))
			{
				this.Onchar_energyChanging(value);
				this.SendPropertyChanging();
				this._char_energy = value;
				this.SendPropertyChanged("char_energy");
				this.Onchar_energyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_damage", DbType="Int")]
	public System.Nullable<int> char_damage
	{
		get
		{
			return this._char_damage;
		}
		set
		{
			if ((this._char_damage != value))
			{
				this.Onchar_damageChanging(value);
				this.SendPropertyChanging();
				this._char_damage = value;
				this.SendPropertyChanged("char_damage");
				this.Onchar_damageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_defend", DbType="Int")]
	public System.Nullable<int> char_defend
	{
		get
		{
			return this._char_defend;
		}
		set
		{
			if ((this._char_defend != value))
			{
				this.Onchar_defendChanging(value);
				this.SendPropertyChanging();
				this._char_defend = value;
				this.SendPropertyChanged("char_defend");
				this.Onchar_defendChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_critical", DbType="Int")]
	public System.Nullable<int> char_critical
	{
		get
		{
			return this._char_critical;
		}
		set
		{
			if ((this._char_critical != value))
			{
				this.Onchar_criticalChanging(value);
				this.SendPropertyChanging();
				this._char_critical = value;
				this.SendPropertyChanged("char_critical");
				this.Onchar_criticalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_hp", DbType="Int")]
	public System.Nullable<int> char_hp
	{
		get
		{
			return this._char_hp;
		}
		set
		{
			if ((this._char_hp != value))
			{
				this.Onchar_hpChanging(value);
				this.SendPropertyChanging();
				this._char_hp = value;
				this.SendPropertyChanged("char_hp");
				this.Onchar_hpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_clan_id", DbType="Int")]
	public System.Nullable<int> char_clan_id
	{
		get
		{
			return this._char_clan_id;
		}
		set
		{
			if ((this._char_clan_id != value))
			{
				if (this._clan.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_clan_idChanging(value);
				this.SendPropertyChanging();
				this._char_clan_id = value;
				this.SendPropertyChanged("char_clan_id");
				this.Onchar_clan_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_money", DbType="Int")]
	public System.Nullable<int> char_money
	{
		get
		{
			return this._char_money;
		}
		set
		{
			if ((this._char_money != value))
			{
				this.Onchar_moneyChanging(value);
				this.SendPropertyChanging();
				this._char_money = value;
				this.SendPropertyChanged("char_money");
				this.Onchar_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_friend_list", DbType="NVarChar(50)")]
	public string char_friend_list
	{
		get
		{
			return this._char_friend_list;
		}
		set
		{
			if ((this._char_friend_list != value))
			{
				this.Onchar_friend_listChanging(value);
				this.SendPropertyChanging();
				this._char_friend_list = value;
				this.SendPropertyChanged("char_friend_list");
				this.Onchar_friend_listChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_position", DbType="Int")]
	public System.Nullable<int> char_position
	{
		get
		{
			return this._char_position;
		}
		set
		{
			if ((this._char_position != value))
			{
				if (this._map.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_positionChanging(value);
				this.SendPropertyChanging();
				this._char_position = value;
				this.SendPropertyChanged("char_position");
				this.Onchar_positionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_item_equipment_helm", DbType="Int")]
	public System.Nullable<int> char_item_equipment_helm
	{
		get
		{
			return this._char_item_equipment_helm;
		}
		set
		{
			if ((this._char_item_equipment_helm != value))
			{
				if (this._item.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_item_equipment_helmChanging(value);
				this.SendPropertyChanging();
				this._char_item_equipment_helm = value;
				this.SendPropertyChanged("char_item_equipment_helm");
				this.Onchar_item_equipment_helmChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_item_equipment_armor", DbType="Int")]
	public System.Nullable<int> char_item_equipment_armor
	{
		get
		{
			return this._char_item_equipment_armor;
		}
		set
		{
			if ((this._char_item_equipment_armor != value))
			{
				if (this._item1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_item_equipment_armorChanging(value);
				this.SendPropertyChanging();
				this._char_item_equipment_armor = value;
				this.SendPropertyChanged("char_item_equipment_armor");
				this.Onchar_item_equipment_armorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_item_equipment_gloves", DbType="Int")]
	public System.Nullable<int> char_item_equipment_gloves
	{
		get
		{
			return this._char_item_equipment_gloves;
		}
		set
		{
			if ((this._char_item_equipment_gloves != value))
			{
				if ((this._item2.HasLoadedOrAssignedValue || this._item3.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_item_equipment_glovesChanging(value);
				this.SendPropertyChanging();
				this._char_item_equipment_gloves = value;
				this.SendPropertyChanged("char_item_equipment_gloves");
				this.Onchar_item_equipment_glovesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_item_equipment_weapon", DbType="Int")]
	public System.Nullable<int> char_item_equipment_weapon
	{
		get
		{
			return this._char_item_equipment_weapon;
		}
		set
		{
			if ((this._char_item_equipment_weapon != value))
			{
				if (this._item4.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_item_equipment_weaponChanging(value);
				this.SendPropertyChanging();
				this._char_item_equipment_weapon = value;
				this.SendPropertyChanged("char_item_equipment_weapon");
				this.Onchar_item_equipment_weaponChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_item_equipment_shield", DbType="Int")]
	public System.Nullable<int> char_item_equipment_shield
	{
		get
		{
			return this._char_item_equipment_shield;
		}
		set
		{
			if ((this._char_item_equipment_shield != value))
			{
				if (this._item5.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_item_equipment_shieldChanging(value);
				this.SendPropertyChanging();
				this._char_item_equipment_shield = value;
				this.SendPropertyChanged("char_item_equipment_shield");
				this.Onchar_item_equipment_shieldChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_item_equipment_boots", DbType="Int")]
	public System.Nullable<int> char_item_equipment_boots
	{
		get
		{
			return this._char_item_equipment_boots;
		}
		set
		{
			if ((this._char_item_equipment_boots != value))
			{
				if (this._item6.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_item_equipment_bootsChanging(value);
				this.SendPropertyChanging();
				this._char_item_equipment_boots = value;
				this.SendPropertyChanged("char_item_equipment_boots");
				this.Onchar_item_equipment_bootsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_baggage_event", DbType="NVarChar(50)")]
	public string char_baggage_event
	{
		get
		{
			return this._char_baggage_event;
		}
		set
		{
			if ((this._char_baggage_event != value))
			{
				this.Onchar_baggage_eventChanging(value);
				this.SendPropertyChanging();
				this._char_baggage_event = value;
				this.SendPropertyChanged("char_baggage_event");
				this.Onchar_baggage_eventChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_baggage_quest", DbType="NVarChar(50)")]
	public string char_baggage_quest
	{
		get
		{
			return this._char_baggage_quest;
		}
		set
		{
			if ((this._char_baggage_quest != value))
			{
				this.Onchar_baggage_questChanging(value);
				this.SendPropertyChanging();
				this._char_baggage_quest = value;
				this.SendPropertyChanged("char_baggage_quest");
				this.Onchar_baggage_questChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_baggage", DbType="NVarChar(50)")]
	public string char_baggage
	{
		get
		{
			return this._char_baggage;
		}
		set
		{
			if ((this._char_baggage != value))
			{
				this.Onchar_baggageChanging(value);
				this.SendPropertyChanging();
				this._char_baggage = value;
				this.SendPropertyChanged("char_baggage");
				this.Onchar_baggageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_cash", DbType="Int")]
	public System.Nullable<int> char_cash
	{
		get
		{
			return this._char_cash;
		}
		set
		{
			if ((this._char_cash != value))
			{
				this.Onchar_cashChanging(value);
				this.SendPropertyChanging();
				this._char_cash = value;
				this.SendPropertyChanged("char_cash");
				this.Onchar_cashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_title", DbType="Int")]
	public System.Nullable<int> char_title
	{
		get
		{
			return this._char_title;
		}
		set
		{
			if ((this._char_title != value))
			{
				if (this._char_title1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onchar_titleChanging(value);
				this.SendPropertyChanging();
				this._char_title = value;
				this.SendPropertyChanged("char_title");
				this.Onchar_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_avatar", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string char_avatar
	{
		get
		{
			return this._char_avatar;
		}
		set
		{
			if ((this._char_avatar != value))
			{
				this.Onchar_avatarChanging(value);
				this.SendPropertyChanging();
				this._char_avatar = value;
				this.SendPropertyChanged("char_avatar");
				this.Onchar_avatarChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_kill", DbType="Int")]
	public System.Nullable<int> char_kill
	{
		get
		{
			return this._char_kill;
		}
		set
		{
			if ((this._char_kill != value))
			{
				this.Onchar_killChanging(value);
				this.SendPropertyChanging();
				this._char_kill = value;
				this.SendPropertyChanged("char_kill");
				this.Onchar_killChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_char_skin", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string char_skin
	{
		get
		{
			return this._char_skin;
		}
		set
		{
			if ((this._char_skin != value))
			{
				this.Onchar_skinChanging(value);
				this.SendPropertyChanging();
				this._char_skin = value;
				this.SendPropertyChanged("char_skin");
				this.Onchar_skinChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="char_title_character", Storage="_char_title1", ThisKey="char_title", OtherKey="ID", IsForeignKey=true)]
	public char_title char_title1
	{
		get
		{
			return this._char_title1.Entity;
		}
		set
		{
			char_title previousValue = this._char_title1.Entity;
			if (((previousValue != value) 
						|| (this._char_title1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._char_title1.Entity = null;
					previousValue.characters.Remove(this);
				}
				this._char_title1.Entity = value;
				if ((value != null))
				{
					value.characters.Add(this);
					this._char_title = value.ID;
				}
				else
				{
					this._char_title = default(Nullable<int>);
				}
				this.SendPropertyChanged("char_title1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="clan_character", Storage="_clan", ThisKey="char_clan_id", OtherKey="ID", IsForeignKey=true)]
	public clan clan
	{
		get
		{
			return this._clan.Entity;
		}
		set
		{
			clan previousValue = this._clan.Entity;
			if (((previousValue != value) 
						|| (this._clan.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._clan.Entity = null;
					previousValue.characters.Remove(this);
				}
				this._clan.Entity = value;
				if ((value != null))
				{
					value.characters.Add(this);
					this._char_clan_id = value.ID;
				}
				else
				{
					this._char_clan_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("clan");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="map_character", Storage="_map", ThisKey="char_position", OtherKey="ID", IsForeignKey=true)]
	public map map
	{
		get
		{
			return this._map.Entity;
		}
		set
		{
			map previousValue = this._map.Entity;
			if (((previousValue != value) 
						|| (this._map.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._map.Entity = null;
					previousValue.characters.Remove(this);
				}
				this._map.Entity = value;
				if ((value != null))
				{
					value.characters.Add(this);
					this._char_position = value.ID;
				}
				else
				{
					this._char_position = default(Nullable<int>);
				}
				this.SendPropertyChanged("map");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character", Storage="_item", ThisKey="char_item_equipment_helm", OtherKey="ID", IsForeignKey=true)]
	public item item
	{
		get
		{
			return this._item.Entity;
		}
		set
		{
			item previousValue = this._item.Entity;
			if (((previousValue != value) 
						|| (this._item.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item.Entity = null;
					previousValue.characters.Remove(this);
				}
				this._item.Entity = value;
				if ((value != null))
				{
					value.characters.Add(this);
					this._char_item_equipment_helm = value.ID;
				}
				else
				{
					this._char_item_equipment_helm = default(Nullable<int>);
				}
				this.SendPropertyChanged("item");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character1", Storage="_item1", ThisKey="char_item_equipment_armor", OtherKey="ID", IsForeignKey=true)]
	public item item1
	{
		get
		{
			return this._item1.Entity;
		}
		set
		{
			item previousValue = this._item1.Entity;
			if (((previousValue != value) 
						|| (this._item1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item1.Entity = null;
					previousValue.characters1.Remove(this);
				}
				this._item1.Entity = value;
				if ((value != null))
				{
					value.characters1.Add(this);
					this._char_item_equipment_armor = value.ID;
				}
				else
				{
					this._char_item_equipment_armor = default(Nullable<int>);
				}
				this.SendPropertyChanged("item1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character2", Storage="_item2", ThisKey="char_item_equipment_gloves", OtherKey="ID", IsForeignKey=true)]
	public item item2
	{
		get
		{
			return this._item2.Entity;
		}
		set
		{
			item previousValue = this._item2.Entity;
			if (((previousValue != value) 
						|| (this._item2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item2.Entity = null;
					previousValue.characters2.Remove(this);
				}
				this._item2.Entity = value;
				if ((value != null))
				{
					value.characters2.Add(this);
					this._char_item_equipment_gloves = value.ID;
				}
				else
				{
					this._char_item_equipment_gloves = default(Nullable<int>);
				}
				this.SendPropertyChanged("item2");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character3", Storage="_item3", ThisKey="char_item_equipment_gloves", OtherKey="ID", IsForeignKey=true)]
	public item item3
	{
		get
		{
			return this._item3.Entity;
		}
		set
		{
			item previousValue = this._item3.Entity;
			if (((previousValue != value) 
						|| (this._item3.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item3.Entity = null;
					previousValue.characters3.Remove(this);
				}
				this._item3.Entity = value;
				if ((value != null))
				{
					value.characters3.Add(this);
					this._char_item_equipment_gloves = value.ID;
				}
				else
				{
					this._char_item_equipment_gloves = default(Nullable<int>);
				}
				this.SendPropertyChanged("item3");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character4", Storage="_item4", ThisKey="char_item_equipment_weapon", OtherKey="ID", IsForeignKey=true)]
	public item item4
	{
		get
		{
			return this._item4.Entity;
		}
		set
		{
			item previousValue = this._item4.Entity;
			if (((previousValue != value) 
						|| (this._item4.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item4.Entity = null;
					previousValue.characters4.Remove(this);
				}
				this._item4.Entity = value;
				if ((value != null))
				{
					value.characters4.Add(this);
					this._char_item_equipment_weapon = value.ID;
				}
				else
				{
					this._char_item_equipment_weapon = default(Nullable<int>);
				}
				this.SendPropertyChanged("item4");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character5", Storage="_item5", ThisKey="char_item_equipment_shield", OtherKey="ID", IsForeignKey=true)]
	public item item5
	{
		get
		{
			return this._item5.Entity;
		}
		set
		{
			item previousValue = this._item5.Entity;
			if (((previousValue != value) 
						|| (this._item5.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item5.Entity = null;
					previousValue.characters5.Remove(this);
				}
				this._item5.Entity = value;
				if ((value != null))
				{
					value.characters5.Add(this);
					this._char_item_equipment_shield = value.ID;
				}
				else
				{
					this._char_item_equipment_shield = default(Nullable<int>);
				}
				this.SendPropertyChanged("item5");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character6", Storage="_item6", ThisKey="char_item_equipment_boots", OtherKey="ID", IsForeignKey=true)]
	public item item6
	{
		get
		{
			return this._item6.Entity;
		}
		set
		{
			item previousValue = this._item6.Entity;
			if (((previousValue != value) 
						|| (this._item6.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item6.Entity = null;
					previousValue.characters6.Remove(this);
				}
				this._item6.Entity = value;
				if ((value != null))
				{
					value.characters6.Add(this);
					this._char_item_equipment_boots = value.ID;
				}
				else
				{
					this._char_item_equipment_boots = default(Nullable<int>);
				}
				this.SendPropertyChanged("item6");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_character", Storage="_account", ThisKey="username", OtherKey="username", IsForeignKey=true)]
	public account account
	{
		get
		{
			return this._account.Entity;
		}
		set
		{
			account previousValue = this._account.Entity;
			if (((previousValue != value) 
						|| (this._account.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._account.Entity = null;
					previousValue.characters.Remove(this);
				}
				this._account.Entity = value;
				if ((value != null))
				{
					value.characters.Add(this);
					this._username = value.username;
				}
				else
				{
					this._username = default(string);
				}
				this.SendPropertyChanged("account");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hero")]
public partial class Hero1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdHero;
	
	private string _Name;
	
	private System.Nullable<int> _IdType;
	
	private string _Lore;
	
	private string _Avatar;
	
	private string _Skin;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHeroChanging(int value);
    partial void OnIdHeroChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdTypeChanging(System.Nullable<int> value);
    partial void OnIdTypeChanged();
    partial void OnLoreChanging(string value);
    partial void OnLoreChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnSkinChanging(string value);
    partial void OnSkinChanged();
    #endregion
	
	public Hero1()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHero", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdHero
	{
		get
		{
			return this._IdHero;
		}
		set
		{
			if ((this._IdHero != value))
			{
				this.OnIdHeroChanging(value);
				this.SendPropertyChanging();
				this._IdHero = value;
				this.SendPropertyChanged("IdHero");
				this.OnIdHeroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdType", DbType="Int")]
	public System.Nullable<int> IdType
	{
		get
		{
			return this._IdType;
		}
		set
		{
			if ((this._IdType != value))
			{
				this.OnIdTypeChanging(value);
				this.SendPropertyChanging();
				this._IdType = value;
				this.SendPropertyChanged("IdType");
				this.OnIdTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lore", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Lore
	{
		get
		{
			return this._Lore;
		}
		set
		{
			if ((this._Lore != value))
			{
				this.OnLoreChanging(value);
				this.SendPropertyChanging();
				this._Lore = value;
				this.SendPropertyChanged("Lore");
				this.OnLoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Avatar
	{
		get
		{
			return this._Avatar;
		}
		set
		{
			if ((this._Avatar != value))
			{
				this.OnAvatarChanging(value);
				this.SendPropertyChanging();
				this._Avatar = value;
				this.SendPropertyChanged("Avatar");
				this.OnAvatarChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skin", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Skin
	{
		get
		{
			return this._Skin;
		}
		set
		{
			if ((this._Skin != value))
			{
				this.OnSkinChanging(value);
				this.SendPropertyChanging();
				this._Skin = value;
				this.SendPropertyChanged("Skin");
				this.OnSkinChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeroType")]
public partial class HeroType1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdType;
	
	private string _TypeName;
	
	private System.Nullable<int> _HP;
	
	private System.Nullable<int> _Damage;
	
	private System.Nullable<int> _Defence;
	
	private System.Nullable<int> _Energy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypeChanging(int value);
    partial void OnIdTypeChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnHPChanging(System.Nullable<int> value);
    partial void OnHPChanged();
    partial void OnDamageChanging(System.Nullable<int> value);
    partial void OnDamageChanged();
    partial void OnDefenceChanging(System.Nullable<int> value);
    partial void OnDefenceChanged();
    partial void OnEnergyChanging(System.Nullable<int> value);
    partial void OnEnergyChanged();
    #endregion
	
	public HeroType1()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdType", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdType
	{
		get
		{
			return this._IdType;
		}
		set
		{
			if ((this._IdType != value))
			{
				this.OnIdTypeChanging(value);
				this.SendPropertyChanging();
				this._IdType = value;
				this.SendPropertyChanged("IdType");
				this.OnIdTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string TypeName
	{
		get
		{
			return this._TypeName;
		}
		set
		{
			if ((this._TypeName != value))
			{
				this.OnTypeNameChanging(value);
				this.SendPropertyChanging();
				this._TypeName = value;
				this.SendPropertyChanged("TypeName");
				this.OnTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HP", DbType="Int")]
	public System.Nullable<int> HP
	{
		get
		{
			return this._HP;
		}
		set
		{
			if ((this._HP != value))
			{
				this.OnHPChanging(value);
				this.SendPropertyChanging();
				this._HP = value;
				this.SendPropertyChanged("HP");
				this.OnHPChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damage", DbType="Int")]
	public System.Nullable<int> Damage
	{
		get
		{
			return this._Damage;
		}
		set
		{
			if ((this._Damage != value))
			{
				this.OnDamageChanging(value);
				this.SendPropertyChanging();
				this._Damage = value;
				this.SendPropertyChanged("Damage");
				this.OnDamageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Defence", DbType="Int")]
	public System.Nullable<int> Defence
	{
		get
		{
			return this._Defence;
		}
		set
		{
			if ((this._Defence != value))
			{
				this.OnDefenceChanging(value);
				this.SendPropertyChanging();
				this._Defence = value;
				this.SendPropertyChanged("Defence");
				this.OnDefenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Energy", DbType="Int")]
	public System.Nullable<int> Energy
	{
		get
		{
			return this._Energy;
		}
		set
		{
			if ((this._Energy != value))
			{
				this.OnEnergyChanging(value);
				this.SendPropertyChanging();
				this._Energy = value;
				this.SendPropertyChanged("Energy");
				this.OnEnergyChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HeroCart")]
public partial class HeroCart1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IdCart;
	
	private string _UserName;
	
	private System.Nullable<int> _SelectedIndex;
	
	private System.Nullable<int> _IdSelectedHero;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCartChanging(int value);
    partial void OnIdCartChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnSelectedIndexChanging(System.Nullable<int> value);
    partial void OnSelectedIndexChanged();
    partial void OnIdSelectedHeroChanging(System.Nullable<int> value);
    partial void OnIdSelectedHeroChanged();
    #endregion
	
	public HeroCart1()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCart", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IdCart
	{
		get
		{
			return this._IdCart;
		}
		set
		{
			if ((this._IdCart != value))
			{
				this.OnIdCartChanging(value);
				this.SendPropertyChanging();
				this._IdCart = value;
				this.SendPropertyChanged("IdCart");
				this.OnIdCartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedIndex", DbType="Int")]
	public System.Nullable<int> SelectedIndex
	{
		get
		{
			return this._SelectedIndex;
		}
		set
		{
			if ((this._SelectedIndex != value))
			{
				this.OnSelectedIndexChanging(value);
				this.SendPropertyChanging();
				this._SelectedIndex = value;
				this.SendPropertyChanged("SelectedIndex");
				this.OnSelectedIndexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSelectedHero", DbType="Int")]
	public System.Nullable<int> IdSelectedHero
	{
		get
		{
			return this._IdSelectedHero;
		}
		set
		{
			if ((this._IdSelectedHero != value))
			{
				this.OnIdSelectedHeroChanging(value);
				this.SendPropertyChanging();
				this._IdSelectedHero = value;
				this.SendPropertyChanged("IdSelectedHero");
				this.OnIdSelectedHeroChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tintuc")]
public partial class tintuc : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _news_title;
	
	private System.Nullable<int> _news_category;
	
	private string _news_content;
	
	private System.Nullable<System.DateTime> _news_date;
	
	private EntityRef<category> _category;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onnews_titleChanging(string value);
    partial void Onnews_titleChanged();
    partial void Onnews_categoryChanging(System.Nullable<int> value);
    partial void Onnews_categoryChanged();
    partial void Onnews_contentChanging(string value);
    partial void Onnews_contentChanged();
    partial void Onnews_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onnews_dateChanged();
    #endregion
	
	public tintuc()
	{
		this._category = default(EntityRef<category>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_news_title", DbType="NVarChar(100)")]
	public string news_title
	{
		get
		{
			return this._news_title;
		}
		set
		{
			if ((this._news_title != value))
			{
				this.Onnews_titleChanging(value);
				this.SendPropertyChanging();
				this._news_title = value;
				this.SendPropertyChanged("news_title");
				this.Onnews_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_news_category", DbType="Int")]
	public System.Nullable<int> news_category
	{
		get
		{
			return this._news_category;
		}
		set
		{
			if ((this._news_category != value))
			{
				if (this._category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onnews_categoryChanging(value);
				this.SendPropertyChanging();
				this._news_category = value;
				this.SendPropertyChanged("news_category");
				this.Onnews_categoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_news_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string news_content
	{
		get
		{
			return this._news_content;
		}
		set
		{
			if ((this._news_content != value))
			{
				this.Onnews_contentChanging(value);
				this.SendPropertyChanging();
				this._news_content = value;
				this.SendPropertyChanged("news_content");
				this.Onnews_contentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_news_date", DbType="DateTime")]
	public System.Nullable<System.DateTime> news_date
	{
		get
		{
			return this._news_date;
		}
		set
		{
			if ((this._news_date != value))
			{
				this.Onnews_dateChanging(value);
				this.SendPropertyChanging();
				this._news_date = value;
				this.SendPropertyChanged("news_date");
				this.Onnews_dateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_tintuc", Storage="_category", ThisKey="news_category", OtherKey="ID", IsForeignKey=true)]
	public category category
	{
		get
		{
			return this._category.Entity;
		}
		set
		{
			category previousValue = this._category.Entity;
			if (((previousValue != value) 
						|| (this._category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._category.Entity = null;
					previousValue.tintucs.Remove(this);
				}
				this._category.Entity = value;
				if ((value != null))
				{
					value.tintucs.Add(this);
					this._news_category = value.ID;
				}
				else
				{
					this._news_category = default(Nullable<int>);
				}
				this.SendPropertyChanged("category");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.item")]
public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _item_name;
	
	private string _item_description;
	
	private System.Nullable<int> _item_level;
	
	private System.Nullable<int> _item_require_level;
	
	private System.Nullable<int> _item_param1;
	
	private System.Nullable<int> _item_value1;
	
	private System.Nullable<int> _item_param2;
	
	private System.Nullable<int> _item_value2;
	
	private System.Nullable<int> _item_param3;
	
	private System.Nullable<int> _item_value3;
	
	private System.Nullable<int> _item_param4;
	
	private System.Nullable<int> _item_value4;
	
	private System.Nullable<int> _item_param5;
	
	private System.Nullable<int> _item_value5;
	
	private int _item_isbuying;
	
	private int _item_islocked;
	
	private string _item_icon;
	
	private string _item_username;
	
	private int _item_equip;
	
	private System.Nullable<int> _item_type;
	
	private System.Nullable<byte> _item_rarity;
	
	private EntitySet<market> _markets;
	
	private EntitySet<character> _characters;
	
	private EntitySet<character> _characters1;
	
	private EntitySet<character> _characters2;
	
	private EntitySet<character> _characters3;
	
	private EntitySet<character> _characters4;
	
	private EntitySet<character> _characters5;
	
	private EntitySet<character> _characters6;
	
	private EntityRef<item_option> _item_option;
	
	private EntityRef<item_option> _item_option1;
	
	private EntityRef<item_option> _item_option2;
	
	private EntityRef<item_option> _item_option3;
	
	private EntityRef<item_option> _item_option4;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onitem_nameChanging(string value);
    partial void Onitem_nameChanged();
    partial void Onitem_descriptionChanging(string value);
    partial void Onitem_descriptionChanged();
    partial void Onitem_levelChanging(System.Nullable<int> value);
    partial void Onitem_levelChanged();
    partial void Onitem_require_levelChanging(System.Nullable<int> value);
    partial void Onitem_require_levelChanged();
    partial void Onitem_param1Changing(System.Nullable<int> value);
    partial void Onitem_param1Changed();
    partial void Onitem_value1Changing(System.Nullable<int> value);
    partial void Onitem_value1Changed();
    partial void Onitem_param2Changing(System.Nullable<int> value);
    partial void Onitem_param2Changed();
    partial void Onitem_value2Changing(System.Nullable<int> value);
    partial void Onitem_value2Changed();
    partial void Onitem_param3Changing(System.Nullable<int> value);
    partial void Onitem_param3Changed();
    partial void Onitem_value3Changing(System.Nullable<int> value);
    partial void Onitem_value3Changed();
    partial void Onitem_param4Changing(System.Nullable<int> value);
    partial void Onitem_param4Changed();
    partial void Onitem_value4Changing(System.Nullable<int> value);
    partial void Onitem_value4Changed();
    partial void Onitem_param5Changing(System.Nullable<int> value);
    partial void Onitem_param5Changed();
    partial void Onitem_value5Changing(System.Nullable<int> value);
    partial void Onitem_value5Changed();
    partial void Onitem_isbuyingChanging(int value);
    partial void Onitem_isbuyingChanged();
    partial void Onitem_islockedChanging(int value);
    partial void Onitem_islockedChanged();
    partial void Onitem_iconChanging(string value);
    partial void Onitem_iconChanged();
    partial void Onitem_usernameChanging(string value);
    partial void Onitem_usernameChanged();
    partial void Onitem_equipChanging(int value);
    partial void Onitem_equipChanged();
    partial void Onitem_typeChanging(System.Nullable<int> value);
    partial void Onitem_typeChanged();
    partial void Onitem_rarityChanging(System.Nullable<byte> value);
    partial void Onitem_rarityChanged();
    #endregion
	
	public item()
	{
		this._markets = new EntitySet<market>(new Action<market>(this.attach_markets), new Action<market>(this.detach_markets));
		this._characters = new EntitySet<character>(new Action<character>(this.attach_characters), new Action<character>(this.detach_characters));
		this._characters1 = new EntitySet<character>(new Action<character>(this.attach_characters1), new Action<character>(this.detach_characters1));
		this._characters2 = new EntitySet<character>(new Action<character>(this.attach_characters2), new Action<character>(this.detach_characters2));
		this._characters3 = new EntitySet<character>(new Action<character>(this.attach_characters3), new Action<character>(this.detach_characters3));
		this._characters4 = new EntitySet<character>(new Action<character>(this.attach_characters4), new Action<character>(this.detach_characters4));
		this._characters5 = new EntitySet<character>(new Action<character>(this.attach_characters5), new Action<character>(this.detach_characters5));
		this._characters6 = new EntitySet<character>(new Action<character>(this.attach_characters6), new Action<character>(this.detach_characters6));
		this._item_option = default(EntityRef<item_option>);
		this._item_option1 = default(EntityRef<item_option>);
		this._item_option2 = default(EntityRef<item_option>);
		this._item_option3 = default(EntityRef<item_option>);
		this._item_option4 = default(EntityRef<item_option>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_name", DbType="NVarChar(50)")]
	public string item_name
	{
		get
		{
			return this._item_name;
		}
		set
		{
			if ((this._item_name != value))
			{
				this.Onitem_nameChanging(value);
				this.SendPropertyChanging();
				this._item_name = value;
				this.SendPropertyChanged("item_name");
				this.Onitem_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string item_description
	{
		get
		{
			return this._item_description;
		}
		set
		{
			if ((this._item_description != value))
			{
				this.Onitem_descriptionChanging(value);
				this.SendPropertyChanging();
				this._item_description = value;
				this.SendPropertyChanged("item_description");
				this.Onitem_descriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_level", DbType="Int")]
	public System.Nullable<int> item_level
	{
		get
		{
			return this._item_level;
		}
		set
		{
			if ((this._item_level != value))
			{
				this.Onitem_levelChanging(value);
				this.SendPropertyChanging();
				this._item_level = value;
				this.SendPropertyChanged("item_level");
				this.Onitem_levelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_require_level", DbType="Int")]
	public System.Nullable<int> item_require_level
	{
		get
		{
			return this._item_require_level;
		}
		set
		{
			if ((this._item_require_level != value))
			{
				this.Onitem_require_levelChanging(value);
				this.SendPropertyChanging();
				this._item_require_level = value;
				this.SendPropertyChanged("item_require_level");
				this.Onitem_require_levelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param1", DbType="Int")]
	public System.Nullable<int> item_param1
	{
		get
		{
			return this._item_param1;
		}
		set
		{
			if ((this._item_param1 != value))
			{
				if (this._item_option.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onitem_param1Changing(value);
				this.SendPropertyChanging();
				this._item_param1 = value;
				this.SendPropertyChanged("item_param1");
				this.Onitem_param1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value1", DbType="Int")]
	public System.Nullable<int> item_value1
	{
		get
		{
			return this._item_value1;
		}
		set
		{
			if ((this._item_value1 != value))
			{
				this.Onitem_value1Changing(value);
				this.SendPropertyChanging();
				this._item_value1 = value;
				this.SendPropertyChanged("item_value1");
				this.Onitem_value1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param2", DbType="Int")]
	public System.Nullable<int> item_param2
	{
		get
		{
			return this._item_param2;
		}
		set
		{
			if ((this._item_param2 != value))
			{
				if (this._item_option1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onitem_param2Changing(value);
				this.SendPropertyChanging();
				this._item_param2 = value;
				this.SendPropertyChanged("item_param2");
				this.Onitem_param2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value2", DbType="Int")]
	public System.Nullable<int> item_value2
	{
		get
		{
			return this._item_value2;
		}
		set
		{
			if ((this._item_value2 != value))
			{
				this.Onitem_value2Changing(value);
				this.SendPropertyChanging();
				this._item_value2 = value;
				this.SendPropertyChanged("item_value2");
				this.Onitem_value2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param3", DbType="Int")]
	public System.Nullable<int> item_param3
	{
		get
		{
			return this._item_param3;
		}
		set
		{
			if ((this._item_param3 != value))
			{
				if (this._item_option2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onitem_param3Changing(value);
				this.SendPropertyChanging();
				this._item_param3 = value;
				this.SendPropertyChanged("item_param3");
				this.Onitem_param3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value3", DbType="Int")]
	public System.Nullable<int> item_value3
	{
		get
		{
			return this._item_value3;
		}
		set
		{
			if ((this._item_value3 != value))
			{
				this.Onitem_value3Changing(value);
				this.SendPropertyChanging();
				this._item_value3 = value;
				this.SendPropertyChanged("item_value3");
				this.Onitem_value3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param4", DbType="Int")]
	public System.Nullable<int> item_param4
	{
		get
		{
			return this._item_param4;
		}
		set
		{
			if ((this._item_param4 != value))
			{
				if (this._item_option3.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onitem_param4Changing(value);
				this.SendPropertyChanging();
				this._item_param4 = value;
				this.SendPropertyChanged("item_param4");
				this.Onitem_param4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value4", DbType="Int")]
	public System.Nullable<int> item_value4
	{
		get
		{
			return this._item_value4;
		}
		set
		{
			if ((this._item_value4 != value))
			{
				this.Onitem_value4Changing(value);
				this.SendPropertyChanging();
				this._item_value4 = value;
				this.SendPropertyChanged("item_value4");
				this.Onitem_value4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_param5", DbType="Int")]
	public System.Nullable<int> item_param5
	{
		get
		{
			return this._item_param5;
		}
		set
		{
			if ((this._item_param5 != value))
			{
				if (this._item_option4.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onitem_param5Changing(value);
				this.SendPropertyChanging();
				this._item_param5 = value;
				this.SendPropertyChanged("item_param5");
				this.Onitem_param5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_value5", DbType="Int")]
	public System.Nullable<int> item_value5
	{
		get
		{
			return this._item_value5;
		}
		set
		{
			if ((this._item_value5 != value))
			{
				this.Onitem_value5Changing(value);
				this.SendPropertyChanging();
				this._item_value5 = value;
				this.SendPropertyChanged("item_value5");
				this.Onitem_value5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_isbuying", DbType="Int NOT NULL")]
	public int item_isbuying
	{
		get
		{
			return this._item_isbuying;
		}
		set
		{
			if ((this._item_isbuying != value))
			{
				this.Onitem_isbuyingChanging(value);
				this.SendPropertyChanging();
				this._item_isbuying = value;
				this.SendPropertyChanged("item_isbuying");
				this.Onitem_isbuyingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_islocked", DbType="Int NOT NULL")]
	public int item_islocked
	{
		get
		{
			return this._item_islocked;
		}
		set
		{
			if ((this._item_islocked != value))
			{
				this.Onitem_islockedChanging(value);
				this.SendPropertyChanging();
				this._item_islocked = value;
				this.SendPropertyChanged("item_islocked");
				this.Onitem_islockedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_icon", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string item_icon
	{
		get
		{
			return this._item_icon;
		}
		set
		{
			if ((this._item_icon != value))
			{
				this.Onitem_iconChanging(value);
				this.SendPropertyChanging();
				this._item_icon = value;
				this.SendPropertyChanged("item_icon");
				this.Onitem_iconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_username", DbType="NVarChar(50)")]
	public string item_username
	{
		get
		{
			return this._item_username;
		}
		set
		{
			if ((this._item_username != value))
			{
				this.Onitem_usernameChanging(value);
				this.SendPropertyChanging();
				this._item_username = value;
				this.SendPropertyChanged("item_username");
				this.Onitem_usernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_equip", DbType="Int NOT NULL")]
	public int item_equip
	{
		get
		{
			return this._item_equip;
		}
		set
		{
			if ((this._item_equip != value))
			{
				this.Onitem_equipChanging(value);
				this.SendPropertyChanging();
				this._item_equip = value;
				this.SendPropertyChanged("item_equip");
				this.Onitem_equipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_type", DbType="Int")]
	public System.Nullable<int> item_type
	{
		get
		{
			return this._item_type;
		}
		set
		{
			if ((this._item_type != value))
			{
				this.Onitem_typeChanging(value);
				this.SendPropertyChanging();
				this._item_type = value;
				this.SendPropertyChanged("item_type");
				this.Onitem_typeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_rarity", DbType="TinyInt")]
	public System.Nullable<byte> item_rarity
	{
		get
		{
			return this._item_rarity;
		}
		set
		{
			if ((this._item_rarity != value))
			{
				this.Onitem_rarityChanging(value);
				this.SendPropertyChanging();
				this._item_rarity = value;
				this.SendPropertyChanged("item_rarity");
				this.Onitem_rarityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_market", Storage="_markets", ThisKey="ID", OtherKey="market_item_id")]
	public EntitySet<market> markets
	{
		get
		{
			return this._markets;
		}
		set
		{
			this._markets.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character", Storage="_characters", ThisKey="ID", OtherKey="char_item_equipment_helm")]
	public EntitySet<character> characters
	{
		get
		{
			return this._characters;
		}
		set
		{
			this._characters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character1", Storage="_characters1", ThisKey="ID", OtherKey="char_item_equipment_armor")]
	public EntitySet<character> characters1
	{
		get
		{
			return this._characters1;
		}
		set
		{
			this._characters1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character2", Storage="_characters2", ThisKey="ID", OtherKey="char_item_equipment_gloves")]
	public EntitySet<character> characters2
	{
		get
		{
			return this._characters2;
		}
		set
		{
			this._characters2.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character3", Storage="_characters3", ThisKey="ID", OtherKey="char_item_equipment_gloves")]
	public EntitySet<character> characters3
	{
		get
		{
			return this._characters3;
		}
		set
		{
			this._characters3.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character4", Storage="_characters4", ThisKey="ID", OtherKey="char_item_equipment_weapon")]
	public EntitySet<character> characters4
	{
		get
		{
			return this._characters4;
		}
		set
		{
			this._characters4.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character5", Storage="_characters5", ThisKey="ID", OtherKey="char_item_equipment_shield")]
	public EntitySet<character> characters5
	{
		get
		{
			return this._characters5;
		}
		set
		{
			this._characters5.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_character6", Storage="_characters6", ThisKey="ID", OtherKey="char_item_equipment_boots")]
	public EntitySet<character> characters6
	{
		get
		{
			return this._characters6;
		}
		set
		{
			this._characters6.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item", Storage="_item_option", ThisKey="item_param1", OtherKey="ID", IsForeignKey=true)]
	public item_option item_option
	{
		get
		{
			return this._item_option.Entity;
		}
		set
		{
			item_option previousValue = this._item_option.Entity;
			if (((previousValue != value) 
						|| (this._item_option.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item_option.Entity = null;
					previousValue.items.Remove(this);
				}
				this._item_option.Entity = value;
				if ((value != null))
				{
					value.items.Add(this);
					this._item_param1 = value.ID;
				}
				else
				{
					this._item_param1 = default(Nullable<int>);
				}
				this.SendPropertyChanged("item_option");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item1", Storage="_item_option1", ThisKey="item_param2", OtherKey="ID", IsForeignKey=true)]
	public item_option item_option1
	{
		get
		{
			return this._item_option1.Entity;
		}
		set
		{
			item_option previousValue = this._item_option1.Entity;
			if (((previousValue != value) 
						|| (this._item_option1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item_option1.Entity = null;
					previousValue.items1.Remove(this);
				}
				this._item_option1.Entity = value;
				if ((value != null))
				{
					value.items1.Add(this);
					this._item_param2 = value.ID;
				}
				else
				{
					this._item_param2 = default(Nullable<int>);
				}
				this.SendPropertyChanged("item_option1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item2", Storage="_item_option2", ThisKey="item_param3", OtherKey="ID", IsForeignKey=true)]
	public item_option item_option2
	{
		get
		{
			return this._item_option2.Entity;
		}
		set
		{
			item_option previousValue = this._item_option2.Entity;
			if (((previousValue != value) 
						|| (this._item_option2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item_option2.Entity = null;
					previousValue.items2.Remove(this);
				}
				this._item_option2.Entity = value;
				if ((value != null))
				{
					value.items2.Add(this);
					this._item_param3 = value.ID;
				}
				else
				{
					this._item_param3 = default(Nullable<int>);
				}
				this.SendPropertyChanged("item_option2");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item3", Storage="_item_option3", ThisKey="item_param4", OtherKey="ID", IsForeignKey=true)]
	public item_option item_option3
	{
		get
		{
			return this._item_option3.Entity;
		}
		set
		{
			item_option previousValue = this._item_option3.Entity;
			if (((previousValue != value) 
						|| (this._item_option3.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item_option3.Entity = null;
					previousValue.items3.Remove(this);
				}
				this._item_option3.Entity = value;
				if ((value != null))
				{
					value.items3.Add(this);
					this._item_param4 = value.ID;
				}
				else
				{
					this._item_param4 = default(Nullable<int>);
				}
				this.SendPropertyChanged("item_option3");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="item_option_item4", Storage="_item_option4", ThisKey="item_param5", OtherKey="ID", IsForeignKey=true)]
	public item_option item_option4
	{
		get
		{
			return this._item_option4.Entity;
		}
		set
		{
			item_option previousValue = this._item_option4.Entity;
			if (((previousValue != value) 
						|| (this._item_option4.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._item_option4.Entity = null;
					previousValue.items4.Remove(this);
				}
				this._item_option4.Entity = value;
				if ((value != null))
				{
					value.items4.Add(this);
					this._item_param5 = value.ID;
				}
				else
				{
					this._item_param5 = default(Nullable<int>);
				}
				this.SendPropertyChanged("item_option4");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_markets(market entity)
	{
		this.SendPropertyChanging();
		entity.item = this;
	}
	
	private void detach_markets(market entity)
	{
		this.SendPropertyChanging();
		entity.item = null;
	}
	
	private void attach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.item = this;
	}
	
	private void detach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.item = null;
	}
	
	private void attach_characters1(character entity)
	{
		this.SendPropertyChanging();
		entity.item1 = this;
	}
	
	private void detach_characters1(character entity)
	{
		this.SendPropertyChanging();
		entity.item1 = null;
	}
	
	private void attach_characters2(character entity)
	{
		this.SendPropertyChanging();
		entity.item2 = this;
	}
	
	private void detach_characters2(character entity)
	{
		this.SendPropertyChanging();
		entity.item2 = null;
	}
	
	private void attach_characters3(character entity)
	{
		this.SendPropertyChanging();
		entity.item3 = this;
	}
	
	private void detach_characters3(character entity)
	{
		this.SendPropertyChanging();
		entity.item3 = null;
	}
	
	private void attach_characters4(character entity)
	{
		this.SendPropertyChanging();
		entity.item4 = this;
	}
	
	private void detach_characters4(character entity)
	{
		this.SendPropertyChanging();
		entity.item4 = null;
	}
	
	private void attach_characters5(character entity)
	{
		this.SendPropertyChanging();
		entity.item5 = this;
	}
	
	private void detach_characters5(character entity)
	{
		this.SendPropertyChanging();
		entity.item5 = null;
	}
	
	private void attach_characters6(character entity)
	{
		this.SendPropertyChanging();
		entity.item6 = this;
	}
	
	private void detach_characters6(character entity)
	{
		this.SendPropertyChanging();
		entity.item6 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.monster")]
public partial class monster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _monster_name;
	
	private System.Nullable<int> _monster_level;
	
	private System.Nullable<int> _monster_money;
	
	private System.Nullable<long> _monster_exp;
	
	private System.Nullable<int> _monster_is_boss;
	
	private System.Nullable<int> _monster_map;
	
	private System.Nullable<int> _monster_damage;
	
	private System.Nullable<int> _monster_hp;
	
	private System.Nullable<int> _monster_defend;
	
	private System.Nullable<int> _monster_drop_normal;
	
	private System.Nullable<int> _monster_drop_rare;
	
	private System.Nullable<int> _monster_drop_epic;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onmonster_nameChanging(string value);
    partial void Onmonster_nameChanged();
    partial void Onmonster_levelChanging(System.Nullable<int> value);
    partial void Onmonster_levelChanged();
    partial void Onmonster_moneyChanging(System.Nullable<int> value);
    partial void Onmonster_moneyChanged();
    partial void Onmonster_expChanging(System.Nullable<long> value);
    partial void Onmonster_expChanged();
    partial void Onmonster_is_bossChanging(System.Nullable<int> value);
    partial void Onmonster_is_bossChanged();
    partial void Onmonster_mapChanging(System.Nullable<int> value);
    partial void Onmonster_mapChanged();
    partial void Onmonster_damageChanging(System.Nullable<int> value);
    partial void Onmonster_damageChanged();
    partial void Onmonster_hpChanging(System.Nullable<int> value);
    partial void Onmonster_hpChanged();
    partial void Onmonster_defendChanging(System.Nullable<int> value);
    partial void Onmonster_defendChanged();
    partial void Onmonster_drop_normalChanging(System.Nullable<int> value);
    partial void Onmonster_drop_normalChanged();
    partial void Onmonster_drop_rareChanging(System.Nullable<int> value);
    partial void Onmonster_drop_rareChanged();
    partial void Onmonster_drop_epicChanging(System.Nullable<int> value);
    partial void Onmonster_drop_epicChanged();
    #endregion
	
	public monster()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_name", DbType="NVarChar(50)")]
	public string monster_name
	{
		get
		{
			return this._monster_name;
		}
		set
		{
			if ((this._monster_name != value))
			{
				this.Onmonster_nameChanging(value);
				this.SendPropertyChanging();
				this._monster_name = value;
				this.SendPropertyChanged("monster_name");
				this.Onmonster_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_level", DbType="Int")]
	public System.Nullable<int> monster_level
	{
		get
		{
			return this._monster_level;
		}
		set
		{
			if ((this._monster_level != value))
			{
				this.Onmonster_levelChanging(value);
				this.SendPropertyChanging();
				this._monster_level = value;
				this.SendPropertyChanged("monster_level");
				this.Onmonster_levelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_money", DbType="Int")]
	public System.Nullable<int> monster_money
	{
		get
		{
			return this._monster_money;
		}
		set
		{
			if ((this._monster_money != value))
			{
				this.Onmonster_moneyChanging(value);
				this.SendPropertyChanging();
				this._monster_money = value;
				this.SendPropertyChanged("monster_money");
				this.Onmonster_moneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_exp", DbType="BigInt")]
	public System.Nullable<long> monster_exp
	{
		get
		{
			return this._monster_exp;
		}
		set
		{
			if ((this._monster_exp != value))
			{
				this.Onmonster_expChanging(value);
				this.SendPropertyChanging();
				this._monster_exp = value;
				this.SendPropertyChanged("monster_exp");
				this.Onmonster_expChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_is_boss", DbType="Int")]
	public System.Nullable<int> monster_is_boss
	{
		get
		{
			return this._monster_is_boss;
		}
		set
		{
			if ((this._monster_is_boss != value))
			{
				this.Onmonster_is_bossChanging(value);
				this.SendPropertyChanging();
				this._monster_is_boss = value;
				this.SendPropertyChanged("monster_is_boss");
				this.Onmonster_is_bossChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_map", DbType="Int")]
	public System.Nullable<int> monster_map
	{
		get
		{
			return this._monster_map;
		}
		set
		{
			if ((this._monster_map != value))
			{
				this.Onmonster_mapChanging(value);
				this.SendPropertyChanging();
				this._monster_map = value;
				this.SendPropertyChanged("monster_map");
				this.Onmonster_mapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_damage", DbType="Int")]
	public System.Nullable<int> monster_damage
	{
		get
		{
			return this._monster_damage;
		}
		set
		{
			if ((this._monster_damage != value))
			{
				this.Onmonster_damageChanging(value);
				this.SendPropertyChanging();
				this._monster_damage = value;
				this.SendPropertyChanged("monster_damage");
				this.Onmonster_damageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_hp", DbType="Int")]
	public System.Nullable<int> monster_hp
	{
		get
		{
			return this._monster_hp;
		}
		set
		{
			if ((this._monster_hp != value))
			{
				this.Onmonster_hpChanging(value);
				this.SendPropertyChanging();
				this._monster_hp = value;
				this.SendPropertyChanged("monster_hp");
				this.Onmonster_hpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_defend", DbType="Int")]
	public System.Nullable<int> monster_defend
	{
		get
		{
			return this._monster_defend;
		}
		set
		{
			if ((this._monster_defend != value))
			{
				this.Onmonster_defendChanging(value);
				this.SendPropertyChanging();
				this._monster_defend = value;
				this.SendPropertyChanged("monster_defend");
				this.Onmonster_defendChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_drop_normal", DbType="Int")]
	public System.Nullable<int> monster_drop_normal
	{
		get
		{
			return this._monster_drop_normal;
		}
		set
		{
			if ((this._monster_drop_normal != value))
			{
				this.Onmonster_drop_normalChanging(value);
				this.SendPropertyChanging();
				this._monster_drop_normal = value;
				this.SendPropertyChanged("monster_drop_normal");
				this.Onmonster_drop_normalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_drop_rare", DbType="Int")]
	public System.Nullable<int> monster_drop_rare
	{
		get
		{
			return this._monster_drop_rare;
		}
		set
		{
			if ((this._monster_drop_rare != value))
			{
				this.Onmonster_drop_rareChanging(value);
				this.SendPropertyChanging();
				this._monster_drop_rare = value;
				this.SendPropertyChanged("monster_drop_rare");
				this.Onmonster_drop_rareChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monster_drop_epic", DbType="Int")]
	public System.Nullable<int> monster_drop_epic
	{
		get
		{
			return this._monster_drop_epic;
		}
		set
		{
			if ((this._monster_drop_epic != value))
			{
				this.Onmonster_drop_epicChanging(value);
				this.SendPropertyChanging();
				this._monster_drop_epic = value;
				this.SendPropertyChanged("monster_drop_epic");
				this.Onmonster_drop_epicChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ID;
	
	private string _username;
	
	private string _password;
	
	private string _email;
	
	private string _name;
	
	private string _phone;
	
	private string _idcard;
	
	private System.Nullable<int> _status;
	
	private System.Nullable<int> _fail_login;
	
	private System.Nullable<System.DateTime> _date_lock;
	
	private string _ip;
	
	private System.Nullable<int> _role;
	
	private EntitySet<char_task> _char_tasks;
	
	private EntitySet<inventory> _inventories;
	
	private EntitySet<character> _characters;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnidcardChanging(string value);
    partial void OnidcardChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void Onfail_loginChanging(System.Nullable<int> value);
    partial void Onfail_loginChanged();
    partial void Ondate_lockChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_lockChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnroleChanging(System.Nullable<int> value);
    partial void OnroleChanged();
    #endregion
	
	public account()
	{
		this._char_tasks = new EntitySet<char_task>(new Action<char_task>(this.attach_char_tasks), new Action<char_task>(this.detach_char_tasks));
		this._inventories = new EntitySet<inventory>(new Action<inventory>(this.attach_inventories), new Action<inventory>(this.detach_inventories));
		this._characters = new EntitySet<character>(new Action<character>(this.attach_characters), new Action<character>(this.detach_characters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
	public string phone
	{
		get
		{
			return this._phone;
		}
		set
		{
			if ((this._phone != value))
			{
				this.OnphoneChanging(value);
				this.SendPropertyChanging();
				this._phone = value;
				this.SendPropertyChanged("phone");
				this.OnphoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcard", DbType="VarChar(50)")]
	public string idcard
	{
		get
		{
			return this._idcard;
		}
		set
		{
			if ((this._idcard != value))
			{
				this.OnidcardChanging(value);
				this.SendPropertyChanging();
				this._idcard = value;
				this.SendPropertyChanged("idcard");
				this.OnidcardChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
	public System.Nullable<int> status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fail_login", DbType="Int")]
	public System.Nullable<int> fail_login
	{
		get
		{
			return this._fail_login;
		}
		set
		{
			if ((this._fail_login != value))
			{
				this.Onfail_loginChanging(value);
				this.SendPropertyChanging();
				this._fail_login = value;
				this.SendPropertyChanged("fail_login");
				this.Onfail_loginChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_lock", DbType="DateTime")]
	public System.Nullable<System.DateTime> date_lock
	{
		get
		{
			return this._date_lock;
		}
		set
		{
			if ((this._date_lock != value))
			{
				this.Ondate_lockChanging(value);
				this.SendPropertyChanging();
				this._date_lock = value;
				this.SendPropertyChanged("date_lock");
				this.Ondate_lockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(50)")]
	public string ip
	{
		get
		{
			return this._ip;
		}
		set
		{
			if ((this._ip != value))
			{
				this.OnipChanging(value);
				this.SendPropertyChanging();
				this._ip = value;
				this.SendPropertyChanged("ip");
				this.OnipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int")]
	public System.Nullable<int> role
	{
		get
		{
			return this._role;
		}
		set
		{
			if ((this._role != value))
			{
				this.OnroleChanging(value);
				this.SendPropertyChanging();
				this._role = value;
				this.SendPropertyChanged("role");
				this.OnroleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_char_task", Storage="_char_tasks", ThisKey="username", OtherKey="username")]
	public EntitySet<char_task> char_tasks
	{
		get
		{
			return this._char_tasks;
		}
		set
		{
			this._char_tasks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_inventory", Storage="_inventories", ThisKey="username", OtherKey="username")]
	public EntitySet<inventory> inventories
	{
		get
		{
			return this._inventories;
		}
		set
		{
			this._inventories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_character", Storage="_characters", ThisKey="username", OtherKey="username")]
	public EntitySet<character> characters
	{
		get
		{
			return this._characters;
		}
		set
		{
			this._characters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_char_tasks(char_task entity)
	{
		this.SendPropertyChanging();
		entity.account = this;
	}
	
	private void detach_char_tasks(char_task entity)
	{
		this.SendPropertyChanging();
		entity.account = null;
	}
	
	private void attach_inventories(inventory entity)
	{
		this.SendPropertyChanging();
		entity.account = this;
	}
	
	private void detach_inventories(inventory entity)
	{
		this.SendPropertyChanging();
		entity.account = null;
	}
	
	private void attach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.account = this;
	}
	
	private void detach_characters(character entity)
	{
		this.SendPropertyChanging();
		entity.account = null;
	}
}
#pragma warning restore 1591
